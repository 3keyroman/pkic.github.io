<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TLS 1.0 on Public Key Infrastructure (PKI) Consortium</title><link>/tags/tls-1.0/</link><description>Recent content in TLS 1.0 on Public Key Infrastructure (PKI) Consortium</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>PKI Consortium, Inc. All Rights Reserved</copyright><lastBuildDate>Thu, 09 Jan 2020 21:00:24 +0000</lastBuildDate><atom:link href="/tags/tls-1.0/feed/index.xml" rel="self" type="application/rss+xml"/><item><title>The CA Security Council Looks Ahead to 2020 and Beyond</title><link>/2020/01/09/the-ca-security-council-looks-ahead-to-2020-and-beyond/</link><pubDate>Thu, 09 Jan 2020 21:00:24 +0000</pubDate><guid>/2020/01/09/the-ca-security-council-looks-ahead-to-2020-and-beyond/</guid><description>A whirlwind of activity will cause dramatic shifts across the PKI world in the year ahead Suffice it to say that 2019 was filled with challenges and contentiousness as Certificate Authorities and Browsers began to watch their shared visions diverge. The debate around Extended Validation continued as CAs pushed for a range of reforms and browsers pushed to strip its visual indicators. And a ballot to shorten maximum certificate validity periods exposed fault-lines at the CAB Forum.</description></item><item><title>2019 – Looking Back, Moving Forward</title><link>/2019/01/03/2019-looking-back-moving-forward/</link><pubDate>Thu, 03 Jan 2019 14:24:26 +0000</pubDate><guid>/2019/01/03/2019-looking-back-moving-forward/</guid><description>Looking Back at 2018 2018 was an active year for SSL/TLS. We saw the SSL/TLS certificate validity period drop to 825-days and the mass deployment of Certificate Transparency (CT). TLS 1.3 protocol was finally completed and published; and Chrome status bar security indicators changing to remove “secure” and to concentrate on “not secure.” The CA/Browser Forum has been reformed, the London Protocol was announced and the nearly full distrust of Symantec SSL completed.</description></item><item><title>CA Security Council (CASC) 2019 Predictions: The Good, the Bad, and the Ugly</title><link>/2018/12/06/ca-security-council-casc-2019-predictions-the-good-the-bad-and-the-ugly/</link><pubDate>Thu, 06 Dec 2018 18:07:15 +0000</pubDate><guid>/2018/12/06/ca-security-council-casc-2019-predictions-the-good-the-bad-and-the-ugly/</guid><description>As the legendary coach of the NY Yankees Yogi Berra allegedly said, “It’s difficult to make predictions, especially about the future.” But we’re going to try.
Here are the CA Security Council (CASC) 2019 Predictions: The Good, the Bad, and the Ugly.
The Good Prediction: By the end of 2019, over 90% of the world’s http traffic will be secured over SSL/TLS
Encryption boosts user security and privacy, and the combined efforts of browsers and Certification Authorities (CAs) over the past few years have moved us rapidly to a world approaching 100% encryption.</description></item><item><title>How a SWEET32 Birthday Attack is Deployed and How to Prevent It</title><link>/2016/09/07/how-a-sweet32-birthday-attack-is-deployed-and-how-to-prevent-it/</link><pubDate>Wed, 07 Sep 2016 17:02:37 +0000</pubDate><guid>/2016/09/07/how-a-sweet32-birthday-attack-is-deployed-and-how-to-prevent-it/</guid><description>Details surrounding the SWEET32: Birthday attacks on 64-bit block ciphers in TLS and OpenVPN can be found in the paper released by Karthikeyan Bhargavan and Gaëtan Leurent from INRIA in France. The paper shows that cipher suites using 64-bit block length ciphers are vulnerable to plaintext recovery attacks. As such, Triple-DES (3DES) and Blowfish are vulnerable. Here’s an overview.
Vulnerabilities to a SWEET32 Birthday Attack Certain scenarios are pre-disposed to a SWEET32 Birthday attack.</description></item><item><title>2015 – Looking Back, Moving Forward</title><link>/2015/01/06/2015-looking-back-moving-forward/</link><pubDate>Tue, 06 Jan 2015 16:30:28 +0000</pubDate><guid>/2015/01/06/2015-looking-back-moving-forward/</guid><description>Looking Back at 2014 End of 1024-Bit Security In 2014, the SSL industry moved to issuing a minimum security of 2048-bit RSA certificates. Keys smaller than 2048 are no longer allowed in server certificates. In addition, Microsoft and Mozilla started to remove 1024-bit roots from their certificate stores. Hopefully, the key size change will support users through to 2030.
Push to Perfect Forward Secrecy Following the Edward Snowden revelations of pervasive surveillance, there was a big push to configure web servers to support Perfect Forward Secrecy.</description></item><item><title>A Follow-up on POODLE and SSL 3.0</title><link>/2014/11/21/a-follow-up-on-poodle-and-ssl-3.0/</link><pubDate>Fri, 21 Nov 2014 15:15:32 +0000</pubDate><guid>/2014/11/21/a-follow-up-on-poodle-and-ssl-3.0/</guid><description>In October 2014, Google announced POODLE, an SSL 3.0 protocol attack.
To bring you up to speed, the SSL/TLS protocol is the most important and popular security protocol on the Internet. The Secure Sockets Layer (SSL) protocol was developed by Netscape. They quickly moved from SSL 1.0 to 2.0 and finalized with SSL 3.0 in 1996.
This protocol was then picked up by the IETF, who released it under the name of Transport Layer Security (TLS).</description></item><item><title>Heartbleed Bug Vulnerability: Discovery, Impact and Solution</title><link>/2014/04/09/heartbleed-bug-vulnerability-discovery-impact-and-solution/</link><pubDate>Wed, 09 Apr 2014 19:30:34 +0000</pubDate><guid>/2014/04/09/heartbleed-bug-vulnerability-discovery-impact-and-solution/</guid><description>On April 7, 2014, a vulnerability in the OpenSSL cryptographic library was announced to the Internet community. Aptly labeled as the Heartbleed bug, this vulnerability affects OpenSSL versions 1.0.1 through 1.0.1f (inclusive). The Heartbleed bug is not a flaw in the SSL or TLS protocols; rather, it is a flaw in the OpenSSL implementation of the TLS/DTLS heartbeat functionality. The flaw is not related or introduced by publicly trusted certificates and is instead a problem with server software.</description></item><item><title>It’s Time for TLS 1.2</title><link>/2013/09/19/its-time-for-tls-1.2/</link><pubDate>Thu, 19 Sep 2013 15:00:40 +0000</pubDate><guid>/2013/09/19/its-time-for-tls-1.2/</guid><description>In a previous post titled Getting the Most Out of SSL Part 2, we touched on the recommendation that Web servers be configured to prefer Transport Layer Security (TLS) version 1.2. With the planned release of Firefox 24 and recent release of Chrome 29 adding support for TLS 1.2, now is a great time for website administrators to make the switch.
Transport Layer Security was formerly called Secure Sockets Layer (SSL) and is the protocol that enables secure “https://” connections to websites.</description></item><item><title>Getting the Most Out of SSL Part 2: Configuration</title><link>/2013/06/29/getting-the-most-out-of-ssl-part-2-configuration/</link><pubDate>Sat, 29 Jun 2013 01:19:26 +0000</pubDate><guid>/2013/06/29/getting-the-most-out-of-ssl-part-2-configuration/</guid><description>They say the most complicated skill is to be simple; despite SSL and HTTPS having been around for a long time, they still are not as simple as they could be.
One of the reasons for this is that the security industry is constantly learning more about how to design and build secure systems; as a result, the protocols and software used to secure online services need to continuously evolve to keep up with the latest risks.</description></item></channel></rss>