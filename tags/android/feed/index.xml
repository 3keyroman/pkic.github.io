<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Android on Public Key Infrastructure (PKI) Consortium</title><link>https://pkic.org/tags/android/</link><description>Recent content in Android on Public Key Infrastructure (PKI) Consortium</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>PKI Consortium, Inc. All Rights Reserved</copyright><lastBuildDate>Thu, 10 Oct 2019 15:52:09 +0000</lastBuildDate><atom:link href="https://pkic.org/tags/android/feed/index.xml" rel="self" type="application/rss+xml"/><item><title>The Insecure Elephant in the Room</title><link>https://pkic.org/2019/10/10/the-insecure-elephant-in-the-room/</link><pubDate>Thu, 10 Oct 2019 15:52:09 +0000</pubDate><guid>https://pkic.org/2019/10/10/the-insecure-elephant-in-the-room/</guid><description>The purpose of this article The purpose of this article is to demonstrate why I believe browser-based UI for website identity can make the web safer for everyone. I explain in great detail, the reasons why the UI and UX didn’t work in the past. And what’s left is only making the problem worse instead of better.
Some people seem to find it difficult to consume my thoughts about the enforcement of “HTTPS EVERYWHERE”, free DV certs and the browser padlock.</description></item><item><title>Chrome Will Show Not Secure for all HTTP Sites Starting July 2018</title><link>https://pkic.org/2018/02/15/chrome-will-show-not-secure-for-all-http-sites-starting-july-2018/</link><pubDate>Thu, 15 Feb 2018 18:30:48 +0000</pubDate><guid>https://pkic.org/2018/02/15/chrome-will-show-not-secure-for-all-http-sites-starting-july-2018/</guid><description>Through 2017 and into 2018, we have seen the use of HTTPS grow substantially. Last Fall Google announced the following status:
Over 68% of Chrome traffic on both Android and Windows is now protected Over 78% of Chrome traffic on both Chrome OS and Mac is now protected 81 of the top 100 sites on the web use HTTPS by default Google helped to drive this growth by implementing the “Secure” and “Not secure” status in Chrome’s status bar.</description></item><item><title>What Will Happen With SHA-1 and Browser Users on January 1st, 2016?</title><link>https://pkic.org/2016/01/05/what-will-happen-with-sha-1-and-browser-users-on-january-1st-2016/</link><pubDate>Tue, 05 Jan 2016 19:50:25 +0000</pubDate><guid>https://pkic.org/2016/01/05/what-will-happen-with-sha-1-and-browser-users-on-january-1st-2016/</guid><description>On January 1, 2016, the public trust certification authorities (CAs) will stop issuing SHA-1 signed SSL/TLS certificates. What will happen?
Will all websites using SHA-1 fail? No. SHA-1 will be supported by browsers and operating systems through 2016. Microsoft and Mozilla have announced that Windows and Firefox will not support SHA-1 in 2017, but no change for 2016. We expect Apple to follow the same protocol.
What about Chrome? Chrome will still provide warning indications in the browser status bar for SHA-1 signed certificates which expire in 2016 and in 2017 or later.</description></item><item><title>The Insecurity of Mobile Applications</title><link>https://pkic.org/2015/06/11/the-insecurity-of-mobile-applications/</link><pubDate>Thu, 11 Jun 2015 18:30:23 +0000</pubDate><guid>https://pkic.org/2015/06/11/the-insecurity-of-mobile-applications/</guid><description>Recently, we read about lots of SSL/TLS-related vulnerabilities found in mobile apps, which should come as no surprise. We were warned about this back in 2012 (see these studies). More warnings came in 2014 from CERT and FireEye. The Open Web Application Security Project (OWASP) listed “insufficient transport layer protection” as number three (#3) in its top 10 list of mobile security problems of 2014. Apps that don’t use SSL/TLS are particularly vulnerable, given the ease of reading and modifying unsecured traffic at Wi-Fi hot spots, for example.</description></item><item><title>Is Your SSL Server Vulnerable to a FREAK Attack?</title><link>https://pkic.org/2015/03/11/is-your-ssl-server-vulnerable-to-a-freak-attack/</link><pubDate>Wed, 11 Mar 2015 16:00:22 +0000</pubDate><guid>https://pkic.org/2015/03/11/is-your-ssl-server-vulnerable-to-a-freak-attack/</guid><description>FREAK is a new man-in-the-middle (MITM) vulnerability discovered by a group of cryptographers at INRIA, Microsoft Research and IMDEA. FREAK stands for “Factoring RSA-EXPORT Keys.”
The vulnerability dates back to the 1990s, when the US government banned selling crypto software overseas, unless it used export cipher suites which involved encryption keys no longer than 512-bits.
The issue is there are still some clients who let crypto be degraded from “strong RSA” to “export grade RSA”.</description></item><item><title>Public Key Pinning</title><link>https://pkic.org/2013/08/28/public-key-pinning/</link><pubDate>Wed, 28 Aug 2013 16:29:19 +0000</pubDate><guid>https://pkic.org/2013/08/28/public-key-pinning/</guid><description>The current browser-certification authority (CA) trust model allows a website owner to obtain its SSL certificate from any one of a number of CAs. That flexibility also means that a certificate mis-issued by a CA other than the authorized CA chosen by the website owner, would also be accepted as trustworthy by browsers.
This problem was displayed most dramatically by the DigiNotar attack in 2011 and in a mistaken CA certificate issued by TURKTRUST in 2012.</description></item></channel></rss>