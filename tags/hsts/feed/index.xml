<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HSTS on Public Key Infrastructure (PKI) Consortium</title><link>/tags/hsts/</link><description>Recent content in HSTS on Public Key Infrastructure (PKI) Consortium</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>PKI Consortium, Inc. All Rights Reserved</copyright><lastBuildDate>Thu, 15 Feb 2018 18:30:48 +0000</lastBuildDate><atom:link href="/tags/hsts/feed/index.xml" rel="self" type="application/rss+xml"/><item><title>Chrome Will Show Not Secure for all HTTP Sites Starting July 2018</title><link>/2018/02/15/chrome-will-show-not-secure-for-all-http-sites-starting-july-2018/</link><pubDate>Thu, 15 Feb 2018 18:30:48 +0000</pubDate><guid>/2018/02/15/chrome-will-show-not-secure-for-all-http-sites-starting-july-2018/</guid><description>Through 2017 and into 2018, we have seen the use of HTTPS grow substantially. Last Fall Google announced the following status:
Over 68% of Chrome traffic on both Android and Windows is now protected Over 78% of Chrome traffic on both Chrome OS and Mac is now protected 81 of the top 100 sites on the web use HTTPS by default Google helped to drive this growth by implementing the “Secure” and “Not secure” status in Chrome’s status bar.</description></item><item><title>Chrome to Show HTTP Sites as Not Secure</title><link>/2016/09/15/chrome-to-show-http-sites-as-not-secure/</link><pubDate>Thu, 15 Sep 2016 18:59:31 +0000</pubDate><guid>/2016/09/15/chrome-to-show-http-sites-as-not-secure/</guid><description>Always-On SSL should be deployed to prevent the “Not secure” warning Website owners who do not secure their website with an SSL/TLS certificate will have to rethink their online strategy. In a push to make the Internet safer for all users, Google will soon be issuing a stronger warning to visitors who navigate to a website that does not have the protection of an SSL/TLS certificate.
With the release of Chrome 53 on Windows, Google has changed the trust indications to introduce the circle-i.</description></item><item><title>Moving to Always on HTTPS, Part 2 of 2; Upgrading to HTTP Strict Transport Security</title><link>/2016/02/18/moving-to-always-on-https-part-2-of-2-upgrading-to-http-strict-transport-security/</link><pubDate>Thu, 18 Feb 2016 16:15:16 +0000</pubDate><guid>/2016/02/18/moving-to-always-on-https-part-2-of-2-upgrading-to-http-strict-transport-security/</guid><description>Part 1 of this blog post discussed browser security indicators and how to avoid getting warnings about mixed content on your website. (Mixed content leaves a door open that allows an attacker to snoop or inject malicious content during the browsing session.) This Part 2 discusses other technical measures to implement Always on HTTPS. As I noted previously, one of the difficulties with implementing Always on HTTPS is that content is often provided by third parties.</description></item><item><title>Moving to Always on HTTPS, Part 1 of 2; Marking HTTP as Unsecure</title><link>/2016/02/03/moving-to-always-on-https-part-1-of-2-marking-http-as-unsecure/</link><pubDate>Wed, 03 Feb 2016 21:32:31 +0000</pubDate><guid>/2016/02/03/moving-to-always-on-https-part-1-of-2-marking-http-as-unsecure/</guid><description>Over the past several years there has been increased discussion about deprecating HTTP and making HTTPS the default protocol for the World Wide Web. (HTTP stands for “HyperText Transfer Protocol” and the “S” in HTTPS is enabled with an SSL/TLS digital certificate properly installed and configured on a web server.) These discussions have taken place in the context of browser security indications and technical improvements simplifying the global movement to “Always on HTTPS.</description></item><item><title>HTTP/2 Is Speedy and Secure</title><link>/2015/04/20/http/2-is-speedy-and-secure/</link><pubDate>Mon, 20 Apr 2015 15:15:10 +0000</pubDate><guid>/2015/04/20/http/2-is-speedy-and-secure/</guid><description>Since we last wrote about SSL/TLS performance, there has been a lot of activity in the IETF HTTP Working Group, resulting in the February announcement that the next version of HTTP has been approved. This is big news because it means that major SSL/TLS performance improvements are on the way.
Background When your browser connects to a website today, it most likely uses the HTTP/1.1 protocol that was defined in 1999 in RFC 2616.</description></item><item><title>Extra Trips are for Frequent Flyers, Not SSL/TLS Performance</title><link>/2014/10/30/extra-trips-are-for-frequent-flyers-not-ssl/tls-performance/</link><pubDate>Thu, 30 Oct 2014 16:15:01 +0000</pubDate><guid>/2014/10/30/extra-trips-are-for-frequent-flyers-not-ssl/tls-performance/</guid><description>TLS is quickly becoming a de facto requirement for every website due to increased concerns about spying and Google’s recent move to use HTTPS as a factor in search engine ranking. In a recent article we explained how HSTS helps website operators to ensure that their site is always using TLS, but now we want to ensure that your performance isn’t sacrificed in the name of enhanced security. While the myth that TLS slows down a website has been debunked, some basic settings can make a site using TLS even faster.</description></item><item><title>Secure Your Website with HSTS</title><link>/2014/10/08/secure-your-website-with-hsts/</link><pubDate>Wed, 08 Oct 2014 15:05:10 +0000</pubDate><guid>/2014/10/08/secure-your-website-with-hsts/</guid><description>Is your website secure? One thing to consider is securing your website with HTTP Strict Transport Security (HSTS).
Implementation of HSTS is an extension of the Always-On SSL policy. For each website you want to protect with HSTS, you must first deploy an SSL/TLS certificate (if you haven’t already), and configure that website to be accessible only via HTTPS, not via HTTP. Then you convey to HSTS-enabled browsers that your site is only available with HTTPS, by sending the HSTS header value.</description></item><item><title>2014 – Looking Back, Moving Forward</title><link>/2014/01/06/2014-looking-back-moving-forward/</link><pubDate>Mon, 06 Jan 2014 20:00:12 +0000</pubDate><guid>/2014/01/06/2014-looking-back-moving-forward/</guid><description>Looking Back at 2013 Protocol Attacks The year started with a couple of SSL/TLS protocol attacks: Lucky Thirteen and RC4 attack. Lucky Thirteen allows the decryption of sensitive information, such as passwords and cookies, when using the CBC-mode cipher suite. Lucky Thirteen can be mitigated by implementing software patches or preferring the cipher suite RC4.
That being said, RC4 was also attacked, where through 16 million sessions a small amount of plaintext can be recovered.</description></item><item><title>IETF 88 – Pervasive Surveillance</title><link>/2013/11/26/ietf-88-pervasive-surveillance/</link><pubDate>Tue, 26 Nov 2013 19:00:04 +0000</pubDate><guid>/2013/11/26/ietf-88-pervasive-surveillance/</guid><description>Internet Surveillance The big news at IETF 88 in Vancouver was the technical plenary on Hardening the Internet which discussed the issue of pervasive surveillance. Pervasive surveillance is a mass surveillance of an entire or a substantial fraction of a population. The surveillance is usually carried out by government, is not targeted and its occurrence may not be overt. It was noted that pervasive surveillance, of the kind revealed in the Snowden-sourced documents, constitutes a misguided and damaging attack on civic society in general and the Internet in particular.</description></item><item><title>RSA Recap – Securing Your Site</title><link>/2013/03/08/rsa-recap-securing-your-site/</link><pubDate>Fri, 08 Mar 2013 17:45:55 +0000</pubDate><guid>/2013/03/08/rsa-recap-securing-your-site/</guid><description>At RSA last week a few of us participated in panel discussions that focused on SSL/TLS. During the panel that I moderated on Friday, one theme we addressed was secure server configuration. One of CASC’s goals is to help harden existing SSL/TLS implementations against vulnerabilities—because most SSL/TLS exploits arise from suboptimal website configurations. These vulnerabilities and attacks can be mitigated or even eliminated with proper server configuration and good website design.</description></item></channel></rss>