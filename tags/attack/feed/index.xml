<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Attack on Public Key Infrastructure (PKI) Consortium</title><link>/tags/attack/</link><description>Recent content in Attack on Public Key Infrastructure (PKI) Consortium</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>PKI Consortium, Inc. All Rights Reserved</copyright><lastBuildDate>Fri, 01 May 2020 17:00:58 +0000</lastBuildDate><atom:link href="/tags/attack/feed/index.xml" rel="self" type="application/rss+xml"/><item><title>Digital Trust Is Elusive – Are Qualified Trust Services A Solution?</title><link>/2020/05/01/digital-trust-is-elusive-are-qualified-trust-services-a-solution/</link><pubDate>Fri, 01 May 2020 17:00:58 +0000</pubDate><guid>/2020/05/01/digital-trust-is-elusive-are-qualified-trust-services-a-solution/</guid><description>A popular saying goes: “Trust takes years to build, seconds to break, and forever to repair.”
While I wouldn’t completely agree, the idea isn’t wrong. In real life trust between two parties is established over some period of time, depending on a variety of factors. Have you ever wondered why you initially trust some people more and others less, even if you’ve never met them before? There are a complicated multitude of factors that influence our thoughts: the person’s appearance, tone of voice, title or rank, etc.</description></item><item><title>Chrome Kills Mixed Content for HTTPS</title><link>/2019/12/06/chrome-kills-mixed-content-for-https/</link><pubDate>Fri, 06 Dec 2019 16:52:24 +0000</pubDate><guid>/2019/12/06/chrome-kills-mixed-content-for-https/</guid><description>In a phased approach, Chrome plans to block mixed content on secure websites to improve user security. Most browsers already block some mixed content such as scripts and iframes by default. Chrome is amping it up by gradually taking steps to also block images, audio recordings and videos, according to a recent Google Security blog. Preventing mixed content to load will eventually result in HTTPS websites losing their security indicator downgrading the site to HTTP, which alerts visitors that the site is not secure.</description></item><item><title>The Insecure Elephant in the Room</title><link>/2019/10/10/the-insecure-elephant-in-the-room/</link><pubDate>Thu, 10 Oct 2019 15:52:09 +0000</pubDate><guid>/2019/10/10/the-insecure-elephant-in-the-room/</guid><description>The purpose of this article The purpose of this article is to demonstrate why I believe browser-based UI for website identity can make the web safer for everyone. I explain in great detail, the reasons why the UI and UX didn’t work in the past. And what’s left is only making the problem worse instead of better.
Some people seem to find it difficult to consume my thoughts about the enforcement of “HTTPS EVERYWHERE”, free DV certs and the browser padlock.</description></item><item><title>2019 – Looking Back, Moving Forward</title><link>/2019/01/03/2019-looking-back-moving-forward/</link><pubDate>Thu, 03 Jan 2019 14:24:26 +0000</pubDate><guid>/2019/01/03/2019-looking-back-moving-forward/</guid><description>Looking Back at 2018 2018 was an active year for SSL/TLS. We saw the SSL/TLS certificate validity period drop to 825-days and the mass deployment of Certificate Transparency (CT). TLS 1.3 protocol was finally completed and published; and Chrome status bar security indicators changing to remove “secure” and to concentrate on “not secure.” The CA/Browser Forum has been reformed, the London Protocol was announced and the nearly full distrust of Symantec SSL completed.</description></item><item><title>CA Security Council (CASC) 2019 Predictions: The Good, the Bad, and the Ugly</title><link>/2018/12/06/ca-security-council-casc-2019-predictions-the-good-the-bad-and-the-ugly/</link><pubDate>Thu, 06 Dec 2018 18:07:15 +0000</pubDate><guid>/2018/12/06/ca-security-council-casc-2019-predictions-the-good-the-bad-and-the-ugly/</guid><description>As the legendary coach of the NY Yankees Yogi Berra allegedly said, “It’s difficult to make predictions, especially about the future.” But we’re going to try.
Here are the CA Security Council (CASC) 2019 Predictions: The Good, the Bad, and the Ugly.
The Good Prediction: By the end of 2019, over 90% of the world’s http traffic will be secured over SSL/TLS
Encryption boosts user security and privacy, and the combined efforts of browsers and Certification Authorities (CAs) over the past few years have moved us rapidly to a world approaching 100% encryption.</description></item><item><title>CASC Announces Launch of London Protocol to Improve Identity Assurance and Minimize Phishing on Identity Websites</title><link>/2018/06/27/casc-announces-launch-of-london-protocol-to-improve-identity-assurance-and-minimize-phishing-on-identity-websites/</link><pubDate>Wed, 27 Jun 2018 13:00:44 +0000</pubDate><guid>/2018/06/27/casc-announces-launch-of-london-protocol-to-improve-identity-assurance-and-minimize-phishing-on-identity-websites/</guid><description>LONDON – (June 27, 2018) – The Certificate Authority Security Council (CASC), an advocacy group committed to the advancement of the security of websites and online transactions, announced at the CA/Browser Forum event in London the launch of the London Protocol – an initiative to improve identity assurance and minimize the possibility of phishing activity on websites encrypted with organization validated (OV) and extended validation (EV) certificates, which contain organization identity information (Identity Certificates).</description></item><item><title>2018 – Looking Back, Moving Forward</title><link>/2018/01/06/2018-looking-back-moving-forward/</link><pubDate>Sat, 06 Jan 2018 14:31:22 +0000</pubDate><guid>/2018/01/06/2018-looking-back-moving-forward/</guid><description>Looking Back at 2017 2017 saw the end of SHA-1 in public trust SSL/TLS certificates and the start of Certification Authority Authorization (CAA) allowing domain owners to authorize their CA. A “Not secure” browser indication was propagated to push more websites to support HTTPS. There was also a change in the certification authority (CA) ownership with DigiCert acquiring Symantec’s SSL and related PKI business and Francisco Partners buying Comodo’s CA.</description></item><item><title>How Does the ROCA Attack Work?</title><link>/2017/11/09/how-does-the-roca-attack-work/</link><pubDate>Thu, 09 Nov 2017 19:08:25 +0000</pubDate><guid>/2017/11/09/how-does-the-roca-attack-work/</guid><description>On October 17th, a group of Czech researchers announced they had found a way to factor the moduli of many RSA public keys generated by hardware produced by Infineon Technologies AG. The technical details were presented in a paper at the 2017 Computer and Communications Security conference, hosted by the Association for Computing Machinery on November 2nd.
The technique only works against the key pairs produced by Infineon’s library, because it exploits the unique method they use to generate RSA primes.</description></item><item><title>The Latest on Certification Authority Authorization</title><link>/2017/03/21/the-latest-on-certification-authority-authorization/</link><pubDate>Tue, 21 Mar 2017 20:40:22 +0000</pubDate><guid>/2017/03/21/the-latest-on-certification-authority-authorization/</guid><description>Things are certainly heating up at the CA/Browser with exciting proposals surrounding inclusion of the Wi-Fi Alliance (WFA) as a subjectAltName otherName, new validation methods, and debates over how the CAB Forum will continue operating. One of these newly passed ballots requires all CAs to check and process a domain name’s DNS Certification Authority Authorization (CAA) resource record prior to issuing a digital certificate.
Background RFC 6844 created CAA records as a method for domain owners to specify a policy on which certificate authorities are authorized to issue certificates for the associated domain.</description></item><item><title>2017 – Looking Back, Moving Forward</title><link>/2017/01/13/2017-looking-back-moving-forward/</link><pubDate>Fri, 13 Jan 2017 21:11:15 +0000</pubDate><guid>/2017/01/13/2017-looking-back-moving-forward/</guid><description>Looking Back at 2016 Fortunately, 2016 was not a year full of SSL/TLS vulnerabilities. Although some researchers did prove old cryptography algorithms should be put out to pasture. The year showed the end of public-trusted SHA-1 SSL/TLS certificates. It also showed more transparency should be considered due to issues discovered with a few certification authorities (CAs). The great news is HTTPS is no longer the minority — after 20 years, connections using HTTPS has surpassed HTTP.</description></item><item><title>Why Is Certificate Expiration Necessary?</title><link>/2016/10/19/why-is-certificate-expiration-necessary/</link><pubDate>Wed, 19 Oct 2016 16:26:21 +0000</pubDate><guid>/2016/10/19/why-is-certificate-expiration-necessary/</guid><description>The Long Life Certificate – Why It Doesn’t Exist Why is certificate expiration even necessary? Wouldn’t it be better if I could just buy a certificate with a long life before expiration? It would really simplify certificate management if it could be installed and forgotten. Simple, no management required, just file-and-forget.
Imagine, I’ve been in business, starting say 10 to 15 years ago. I roll out my web pages and secure them with a 20-year-validity SSL certificate.</description></item><item><title>How a SWEET32 Birthday Attack is Deployed and How to Prevent It</title><link>/2016/09/07/how-a-sweet32-birthday-attack-is-deployed-and-how-to-prevent-it/</link><pubDate>Wed, 07 Sep 2016 17:02:37 +0000</pubDate><guid>/2016/09/07/how-a-sweet32-birthday-attack-is-deployed-and-how-to-prevent-it/</guid><description>Details surrounding the SWEET32: Birthday attacks on 64-bit block ciphers in TLS and OpenVPN can be found in the paper released by Karthikeyan Bhargavan and Gaëtan Leurent from INRIA in France. The paper shows that cipher suites using 64-bit block length ciphers are vulnerable to plaintext recovery attacks. As such, Triple-DES (3DES) and Blowfish are vulnerable. Here’s an overview.
Vulnerabilities to a SWEET32 Birthday Attack Certain scenarios are pre-disposed to a SWEET32 Birthday attack.</description></item><item><title>SSL 2.0 and DROWN</title><link>/2016/04/04/ssl-2.0-and-drown/</link><pubDate>Mon, 04 Apr 2016 18:41:33 +0000</pubDate><guid>/2016/04/04/ssl-2.0-and-drown/</guid><description>A team of researchers has announced a vulnerability with SSL 2.0 called Decrypting RSA with Obsolete and Weakened eNcryption; otherwise known as DROWN.
SSL 2.0 is a version of the SSL/TLS security protocols. It was released in February 1995, but due to security flaws was superseded by SSL 3.0 in 1996.
DROWN is a cross-protocol attack where the bugs in SSL 2.0 can be used to attack the security of connections that use TLS.</description></item><item><title>2016 – Looking Back, Moving Forward</title><link>/2015/12/14/2016-looking-back-moving-forward/</link><pubDate>Mon, 14 Dec 2015 19:53:24 +0000</pubDate><guid>/2015/12/14/2016-looking-back-moving-forward/</guid><description>Looking Back at 2015 A number of new tactics proved 2015 was no exception to an active year defending against ever increasing security issues. Vendors found new and creative ways to provide vulnerabilities including the now popular man-in-the-middle (MitM) attacks. MitM as well as a host of other new vulnerabilities caused browsers to rethink their security requirements. This article gives a flashback of the exploits and industry changes from 2015 and looks ahead at the latest security requirements and how it impacts IT security teams.</description></item><item><title>OpenSSL High Severity Vulnerability</title><link>/2015/07/10/openssl-high-severity-vulnerability/</link><pubDate>Fri, 10 Jul 2015 20:14:48 +0000</pubDate><guid>/2015/07/10/openssl-high-severity-vulnerability/</guid><description>OpenSSL has announced a high severity vulnerability, CVE-2015-1793 which will require an upgrade to some OpenSSL installations.
The vulnerability was discovered by Google personnel Adam Langley and David Benjamin on June 24, 2015. Google has been working on an alternative to OpenSSL called BoringSSL. This has allowed Google to reduce vulnerabilities in their installations, but is also a benefit to OpenSSL as issues have been reported. Note that BoringSSL is not impacted.</description></item><item><title>The Insecurity of Mobile Applications</title><link>/2015/06/11/the-insecurity-of-mobile-applications/</link><pubDate>Thu, 11 Jun 2015 18:30:23 +0000</pubDate><guid>/2015/06/11/the-insecurity-of-mobile-applications/</guid><description>Recently, we read about lots of SSL/TLS-related vulnerabilities found in mobile apps, which should come as no surprise. We were warned about this back in 2012 (see these studies). More warnings came in 2014 from CERT and FireEye. The Open Web Application Security Project (OWASP) listed “insufficient transport layer protection” as number three (#3) in its top 10 list of mobile security problems of 2014. Apps that don’t use SSL/TLS are particularly vulnerable, given the ease of reading and modifying unsecured traffic at Wi-Fi hot spots, for example.</description></item><item><title>Server Name Indication and Fewer IP Addresses</title><link>/2015/06/02/server-name-indication-and-fewer-ip-addresses/</link><pubDate>Tue, 02 Jun 2015 17:30:03 +0000</pubDate><guid>/2015/06/02/server-name-indication-and-fewer-ip-addresses/</guid><description>You have a dilemma. You want to continue to deploy your web service but are running out of IPv4 addresses. You consider deploying multiple virtual servers that will use the same IP address. However, your thought is that you can only have one SSL certificate per IP address. How will you make your service secure?
Server Name Indication (SNI) is an extension to the SSL/TLS protocol that allows the browser or client software to indicate which hostname it is attempting to connect.</description></item><item><title>Practical Steps to Counter the Logjam Attack</title><link>/2015/05/26/practical-steps-to-counter-the-logjam-attack/</link><pubDate>Tue, 26 May 2015 16:00:54 +0000</pubDate><guid>/2015/05/26/practical-steps-to-counter-the-logjam-attack/</guid><description>Another flaw has been found in the basic encryption algorithms that secure the Internet. This flaw, named the Logjam attack by its discoverers (researchers from various universities and companies), allows an attacker that can carry out man-in-the-middle (MitM) attacks to weaken the encryption used in secure connections (such as HTTPS, SSH, and VPNs). In theory, this means that an attacker (with sufficient resources) can break the encryption and read the “secure” traffic.</description></item><item><title>My Website’s SSL Certificate is Fine; Why Do Browsers Downgrade the Security Indicators For My Site?</title><link>/2015/04/01/my-websites-ssl-certificate-is-fine-why-do-browsers-downgrade-the-security-indicators-for-my-site/</link><pubDate>Wed, 01 Apr 2015 16:19:02 +0000</pubDate><guid>/2015/04/01/my-websites-ssl-certificate-is-fine-why-do-browsers-downgrade-the-security-indicators-for-my-site/</guid><description>All the major browsers provide “security user interface”, meaning visual elements to inform the user of the security of their connection to the web page they’re visiting. Up until now, those interface elements were tied to the use of SSL/TLS certificates served by the web site. For example, if you went to http://www.example.com, no special elements would be displayed, but if you visited https://www.example.com, you would see a lock icon indicating the presence of a trusted SSL/TLS certificate.</description></item><item><title>Is Your SSL Server Vulnerable to a FREAK Attack?</title><link>/2015/03/11/is-your-ssl-server-vulnerable-to-a-freak-attack/</link><pubDate>Wed, 11 Mar 2015 16:00:22 +0000</pubDate><guid>/2015/03/11/is-your-ssl-server-vulnerable-to-a-freak-attack/</guid><description>FREAK is a new man-in-the-middle (MITM) vulnerability discovered by a group of cryptographers at INRIA, Microsoft Research and IMDEA. FREAK stands for “Factoring RSA-EXPORT Keys.”
The vulnerability dates back to the 1990s, when the US government banned selling crypto software overseas, unless it used export cipher suites which involved encryption keys no longer than 512-bits.
The issue is there are still some clients who let crypto be degraded from “strong RSA” to “export grade RSA”.</description></item><item><title>Lenovo Enables Man-in-the-Middle Attacks Via Superfish Adware</title><link>/2015/02/20/lenovo-enables-man-in-the-middle-attacks-via-superfish-adware/</link><pubDate>Fri, 20 Feb 2015 22:27:36 +0000</pubDate><guid>/2015/02/20/lenovo-enables-man-in-the-middle-attacks-via-superfish-adware/</guid><description>Lenovo is selling computers that contain the Superfish application which “supplements” the user’s SSL sessions to enable their adware application to deliver content transparently; however, due to poor security design this leaves users vulnerable to man-in-the-middle attacks.
How it was supposed to work Superfish uses the program “Visual Discovery” to process images in browser content and then displays ads for similar goods and services. This sounds like any other adware application, but in order to maintain SSL sessions and not alert users with security warnings, Superfish is serving up these images over https.</description></item><item><title>2015 – Looking Back, Moving Forward</title><link>/2015/01/06/2015-looking-back-moving-forward/</link><pubDate>Tue, 06 Jan 2015 16:30:28 +0000</pubDate><guid>/2015/01/06/2015-looking-back-moving-forward/</guid><description>Looking Back at 2014 End of 1024-Bit Security In 2014, the SSL industry moved to issuing a minimum security of 2048-bit RSA certificates. Keys smaller than 2048 are no longer allowed in server certificates. In addition, Microsoft and Mozilla started to remove 1024-bit roots from their certificate stores. Hopefully, the key size change will support users through to 2030.
Push to Perfect Forward Secrecy Following the Edward Snowden revelations of pervasive surveillance, there was a big push to configure web servers to support Perfect Forward Secrecy.</description></item><item><title>POODLE for TLS</title><link>/2014/12/16/poodle-for-tls/</link><pubDate>Tue, 16 Dec 2014 16:10:34 +0000</pubDate><guid>/2014/12/16/poodle-for-tls/</guid><description>The POODLE attack on SSL 3.0 has now been extended to some implementations of TLS. POODLE for TLS can be tracked through CVE-2014-8730.
POODLE is not a flaw with the certificate authority (CA), SSL certificates or certificate management system. POODLE is a TLS implementation bug.
Adam Langley states that “TLS’s padding is a subset of SSLv3’s padding so, technically, you could use an SSLv3 decoding function with TLS and it would still work fine.</description></item><item><title>A Follow-up on POODLE and SSL 3.0</title><link>/2014/11/21/a-follow-up-on-poodle-and-ssl-3.0/</link><pubDate>Fri, 21 Nov 2014 15:15:32 +0000</pubDate><guid>/2014/11/21/a-follow-up-on-poodle-and-ssl-3.0/</guid><description>In October 2014, Google announced POODLE, an SSL 3.0 protocol attack.
To bring you up to speed, the SSL/TLS protocol is the most important and popular security protocol on the Internet. The Secure Sockets Layer (SSL) protocol was developed by Netscape. They quickly moved from SSL 1.0 to 2.0 and finalized with SSL 3.0 in 1996.
This protocol was then picked up by the IETF, who released it under the name of Transport Layer Security (TLS).</description></item><item><title>The Cost of Creating Collisions Using SHA-1</title><link>/2014/11/18/the-cost-of-creating-collisions-using-sha-1/</link><pubDate>Tue, 18 Nov 2014 18:30:21 +0000</pubDate><guid>/2014/11/18/the-cost-of-creating-collisions-using-sha-1/</guid><description>SHA-1 is a cryptographic hash algorithm that is most commonly used today in TLS/SSL certificates on the Internet. It has almost completely replaced older algorithms like MD2, MD4 and MD5, which were phased out when practical attacks against those algorithms became widely known.
If you do a simple web search, you’ll find a number of online services that claim to “crack” SHA-1 and other hash functions. These generally use a computer’s CPU to build and search through a rainbow table, which contains the hash value that results from a number of expected inputs, and allows you to “reverse” the hash algorithm.</description></item><item><title>Secure Your Website with HSTS</title><link>/2014/10/08/secure-your-website-with-hsts/</link><pubDate>Wed, 08 Oct 2014 15:05:10 +0000</pubDate><guid>/2014/10/08/secure-your-website-with-hsts/</guid><description>Is your website secure? One thing to consider is securing your website with HTTP Strict Transport Security (HSTS).
Implementation of HSTS is an extension of the Always-On SSL policy. For each website you want to protect with HSTS, you must first deploy an SSL/TLS certificate (if you haven’t already), and configure that website to be accessible only via HTTPS, not via HTTP. Then you convey to HSTS-enabled browsers that your site is only available with HTTPS, by sending the HSTS header value.</description></item><item><title>Google Plans to Deprecate SHA-1 Certificates – Updated</title><link>/2014/09/24/google-plans-to-deprecate-sha-1-certificates-updated/</link><pubDate>Wed, 24 Sep 2014 18:26:09 +0000</pubDate><guid>/2014/09/24/google-plans-to-deprecate-sha-1-certificates-updated/</guid><description>UPDATED September 23, 2014: The following blog post has been updated with action taken in recent weeks, as well as to reflect helpful user comments left on our August 28 blog post on this topic.
On August 19, Google announced a new policy that accelerates the deprecation of SHA-1 certificates, potentially causing websites using SHA-1 certificates to display warnings in the near future. While keeping with an earlier Microsoft announcement to accept SHA-1 certificates with an expiration date before Jan.</description></item><item><title>Google Plans to Deprecate SHA-1 Certificates</title><link>/2014/08/28/google-plans-to-deprecate-sha-1-certificates/</link><pubDate>Thu, 28 Aug 2014 14:07:44 +0000</pubDate><guid>/2014/08/28/google-plans-to-deprecate-sha-1-certificates/</guid><description>On August 19, Google announced a new policy that accelerates the deprecation of SHA-1 certificates, potentially causing websites using SHA-1 certificates to display warnings in the near future. With the change, Chrome 39 will show a warning for sites that have a SHA-1 certificate expiring in 2016 and require a click through warning for sites with a SHA-1 certificate expiring in 2017 or later. This proposal is scheduled for Chrome 39, which could be released as early as 12 weeks from now.</description></item><item><title>What To Do When You Rely on Internal Names in TLS/SSL Certificates</title><link>/2014/07/18/what-to-do-when-you-rely-on-internal-names-in-tls/ssl-certificates/</link><pubDate>Fri, 18 Jul 2014 18:20:43 +0000</pubDate><guid>/2014/07/18/what-to-do-when-you-rely-on-internal-names-in-tls/ssl-certificates/</guid><description>A deadline set by the CA/Browser Forum for the use of Internal Names is quickly approaching, and many system administrators need to understand how best to adapt to this change. At the same time, hundreds of new top-level domains are being launched, which redefines what constitutes an Internal Name. In this post we’ll explain what the changes are, why they’re being made, and how you can update your systems in response to the problem.</description></item><item><title>Revocation – A Cure For the Common Heartbleed</title><link>/2014/04/28/revocation-a-cure-for-the-common-heartbleed/</link><pubDate>Mon, 28 Apr 2014 21:47:47 +0000</pubDate><guid>/2014/04/28/revocation-a-cure-for-the-common-heartbleed/</guid><description>The Heartbleed bug spurred server administrators worldwide to work closely with Certification Authorities (CAs) in rekeying and reissuing potentially vulnerable SSL certificates. Part of this effort included revoking existing certificates used on vulnerable servers to ensure obtained private keys are not later used in a man-in-the-middle attack against the website. Unfortunately, in recent days, certain news reports and blogs addressing certificate revocation and checking for revoked certificates online have failed to discuss the benefits of revocation, instead focusing on the minority of circumstances where widely deployed revocation is not perfect.</description></item></channel></rss>