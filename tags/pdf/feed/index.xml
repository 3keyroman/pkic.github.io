<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PDF on Public Key Infrastructure (PKI) Consortium</title><link>/tags/pdf/</link><description>Recent content in PDF on Public Key Infrastructure (PKI) Consortium</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>PKI Consortium, Inc. All Rights Reserved</copyright><lastBuildDate>Sat, 06 Jan 2018 14:31:22 +0000</lastBuildDate><atom:link href="/tags/pdf/feed/index.xml" rel="self" type="application/rss+xml"/><item><title>2018 – Looking Back, Moving Forward</title><link>/2018/01/06/2018-looking-back-moving-forward/</link><pubDate>Sat, 06 Jan 2018 14:31:22 +0000</pubDate><guid>/2018/01/06/2018-looking-back-moving-forward/</guid><description>Looking Back at 2017 2017 saw the end of SHA-1 in public trust SSL/TLS certificates and the start of Certification Authority Authorization (CAA) allowing domain owners to authorize their CA. A “Not secure” browser indication was propagated to push more websites to support HTTPS. There was also a change in the certification authority (CA) ownership with DigiCert acquiring Symantec’s SSL and related PKI business and Francisco Partners buying Comodo’s CA.</description></item><item><title>Why You Should Get Familiar With TLS If You Accept Credit Cards</title><link>/2015/04/28/why-you-should-get-familiar-with-tls-if-you-accept-credit-cards/</link><pubDate>Tue, 28 Apr 2015 16:27:35 +0000</pubDate><guid>/2015/04/28/why-you-should-get-familiar-with-tls-if-you-accept-credit-cards/</guid><description>The group that manages the Payment Card Industry Data Security Standard quietly announced in February that an imminent update was coming to its payment card and application requirements related to the use of the SSL encryption protocol. Since then, there has been growing concern among merchants about what the changes mean to them.
The confusion among retailers generally can be boiled down to two questions:
What will the new updates require me to do?</description></item><item><title>Java Secures Supply Chains Through Code Signing</title><link>/2013/12/09/java-secures-supply-chains-through-code-signing/</link><pubDate>Mon, 09 Dec 2013 16:00:15 +0000</pubDate><guid>/2013/12/09/java-secures-supply-chains-through-code-signing/</guid><description>We have recently discussed the benefits of code signing in two posts: Securing Software Distribution with Digital Signatures and Improving Code Signing. These posts covered the role of code signatures as a “digital shrinkwrap” designed to answer a simple question: Did the software I am about to run actually come from the author or has someone changed it along the way?
As software is downloaded, assembled, copied, distributed and redistributed, it can be modified at any point along the supply chain.</description></item></channel></rss>