<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Firefox on Public Key Infrastructure (PKI) Consortium</title><link>https://pkic.org/tags/firefox/</link><description>Recent content in Firefox on Public Key Infrastructure (PKI) Consortium</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>PKI Consortium, Inc. All Rights Reserved</copyright><lastBuildDate>Thu, 09 Jan 2020 21:00:24 +0000</lastBuildDate><atom:link href="https://pkic.org/tags/firefox/feed/index.xml" rel="self" type="application/rss+xml"/><item><title>The CA Security Council Looks Ahead to 2020 and Beyond</title><link>https://pkic.org/2020/01/09/the-ca-security-council-looks-ahead-to-2020-and-beyond/</link><pubDate>Thu, 09 Jan 2020 21:00:24 +0000</pubDate><guid>https://pkic.org/2020/01/09/the-ca-security-council-looks-ahead-to-2020-and-beyond/</guid><description>A whirlwind of activity will cause dramatic shifts across the PKI world in the year ahead Suffice it to say that 2019 was filled with challenges and contentiousness as Certificate Authorities and Browsers began to watch their shared visions diverge. The debate around Extended Validation continued as CAs pushed for a range of reforms and browsers pushed to strip its visual indicators. And a ballot to shorten maximum certificate validity periods exposed fault-lines at the CAB Forum.</description></item><item><title>Chrome Kills Mixed Content for HTTPS</title><link>https://pkic.org/2019/12/06/chrome-kills-mixed-content-for-https/</link><pubDate>Fri, 06 Dec 2019 16:52:24 +0000</pubDate><guid>https://pkic.org/2019/12/06/chrome-kills-mixed-content-for-https/</guid><description>In a phased approach, Chrome plans to block mixed content on secure websites to improve user security. Most browsers already block some mixed content such as scripts and iframes by default. Chrome is amping it up by gradually taking steps to also block images, audio recordings and videos, according to a recent Google Security blog. Preventing mixed content to load will eventually result in HTTPS websites losing their security indicator downgrading the site to HTTP, which alerts visitors that the site is not secure.</description></item><item><title>The Insecure Elephant in the Room</title><link>https://pkic.org/2019/10/10/the-insecure-elephant-in-the-room/</link><pubDate>Thu, 10 Oct 2019 15:52:09 +0000</pubDate><guid>https://pkic.org/2019/10/10/the-insecure-elephant-in-the-room/</guid><description>The purpose of this article The purpose of this article is to demonstrate why I believe browser-based UI for website identity can make the web safer for everyone. I explain in great detail, the reasons why the UI and UX didn’t work in the past. And what’s left is only making the problem worse instead of better.
Some people seem to find it difficult to consume my thoughts about the enforcement of “HTTPS EVERYWHERE”, free DV certs and the browser padlock.</description></item><item><title>Why Are You Removing Website Identity, Google and Mozilla?</title><link>https://pkic.org/2019/08/27/why-are-you-removing-website-identity-google-and-mozilla/</link><pubDate>Tue, 27 Aug 2019 16:48:46 +0000</pubDate><guid>https://pkic.org/2019/08/27/why-are-you-removing-website-identity-google-and-mozilla/</guid><description>You can’t have consumer privacy without having strong website identity Today there’s a huge wave toward protecting consumer privacy – in Congress, with the GDPR, etc. – but how can we protect user privacy on the web without establishing the identity of the websites that are asking for consumer passwords and credit card numbers? Extended Validation (EV) certificates provide this information and can be very useful for consumers.
Recently, Google and Mozilla have announced plan to eliminate the distinctive indicators in the Chrome and Firefox browsers that let consumers know that they are looking at a site authenticated with an EV certificate.</description></item><item><title>What the Latest Firefox Update Means for SSL Certificates</title><link>https://pkic.org/2019/06/14/what-the-latest-firefox-update-means-for-ssl-certificates/</link><pubDate>Fri, 14 Jun 2019 18:13:34 +0000</pubDate><guid>https://pkic.org/2019/06/14/what-the-latest-firefox-update-means-for-ssl-certificates/</guid><description>Last month marked the release of Firefox 66, the newest iteration of the ever-popular web browser. The update adds a number of interesting new features, including improvements to content loading and extension storage, auto-play sound blocking, and support for the AV1 codec (on the Windows version at least). The search feature has also been improved, and, as is typical of browser updates, a number of known security vulnerabilities have been patched.</description></item><item><title>CA Security Council (CASC) 2019 Predictions: The Good, the Bad, and the Ugly</title><link>https://pkic.org/2018/12/06/ca-security-council-casc-2019-predictions-the-good-the-bad-and-the-ugly/</link><pubDate>Thu, 06 Dec 2018 18:07:15 +0000</pubDate><guid>https://pkic.org/2018/12/06/ca-security-council-casc-2019-predictions-the-good-the-bad-and-the-ugly/</guid><description>As the legendary coach of the NY Yankees Yogi Berra allegedly said, “It’s difficult to make predictions, especially about the future.” But we’re going to try.
Here are the CA Security Council (CASC) 2019 Predictions: The Good, the Bad, and the Ugly.
The Good Prediction: By the end of 2019, over 90% of the world’s http traffic will be secured over SSL/TLS
Encryption boosts user security and privacy, and the combined efforts of browsers and Certification Authorities (CAs) over the past few years have moved us rapidly to a world approaching 100% encryption.</description></item><item><title>Fortify Allows Users to Generate X.509 Certificates in Their Browser</title><link>https://pkic.org/2018/06/19/fortify-allows-users-to-generate-x.509-certificates-in-their-browser/</link><pubDate>Tue, 19 Jun 2018 14:00:25 +0000</pubDate><guid>https://pkic.org/2018/06/19/fortify-allows-users-to-generate-x.509-certificates-in-their-browser/</guid><description>Fortify, an open source application sponsored by Certificate Authorities through the CA Security Council, is now available for Windows and Mac. The Fortify app, which is free for all users, connects a user’s web browsers to smart cards, security tokens, and certificates on a user’s local machine. This can allow users to generate X.509 certificates in their browser, replacing the need for the deprecated &amp;lt;keygen&amp;gt; functionality.
Certificate Generation In The Browser The Web Cryptography API, also known as Web Crypto, provides a set of cryptographic capabilities for web browsers through a set of JavaScript APIs.</description></item><item><title>2017 – Looking Back, Moving Forward</title><link>https://pkic.org/2017/01/13/2017-looking-back-moving-forward/</link><pubDate>Fri, 13 Jan 2017 21:11:15 +0000</pubDate><guid>https://pkic.org/2017/01/13/2017-looking-back-moving-forward/</guid><description>Looking Back at 2016 Fortunately, 2016 was not a year full of SSL/TLS vulnerabilities. Although some researchers did prove old cryptography algorithms should be put out to pasture. The year showed the end of public-trusted SHA-1 SSL/TLS certificates. It also showed more transparency should be considered due to issues discovered with a few certification authorities (CAs). The great news is HTTPS is no longer the minority — after 20 years, connections using HTTPS has surpassed HTTP.</description></item><item><title>Trust on the Public Web – The Consequences of Covert Action</title><link>https://pkic.org/2016/11/11/trust-on-the-public-web-the-consequences-of-covert-action/</link><pubDate>Fri, 11 Nov 2016 20:38:03 +0000</pubDate><guid>https://pkic.org/2016/11/11/trust-on-the-public-web-the-consequences-of-covert-action/</guid><description>You may have heard in the news that the Chinese Certificate Authority, WoSign, was caught backdating SHA-1 certificates to make it look like they were issued before the December 31, 2015 deadline. Why is this newsworthy? For web-based security to remain an integral part of an ecosystem used every day by millions of people around the world, it all comes down to Trust; trust in the organization issuing the certificates, trust in the browsers that validate and display certificate information to the user, and trust by relying parties browsing web pages secured by certificates.</description></item><item><title>Always-On SSL</title><link>https://pkic.org/2016/09/30/always-on-ssl/</link><pubDate>Fri, 30 Sep 2016 17:12:49 +0000</pubDate><guid>https://pkic.org/2016/09/30/always-on-ssl/</guid><description>There is no doubt that content owners and publishers have a duty to encourage trust and the confidence during internet usage by adopting security best practices. If a customer believes that their data and identity are safe and protected, they are more inclined to continue their online transactions. Industry best practices for website protection should be vendor-neutral, easy to implement, and globally accessible. Websites should take all the reasonable steps possible to adopt best practices in secure design and implementation, and this includes using Always-On SSL across the entire website.</description></item><item><title>Moving to Always on HTTPS, Part 1 of 2; Marking HTTP as Unsecure</title><link>https://pkic.org/2016/02/03/moving-to-always-on-https-part-1-of-2-marking-http-as-unsecure/</link><pubDate>Wed, 03 Feb 2016 21:32:31 +0000</pubDate><guid>https://pkic.org/2016/02/03/moving-to-always-on-https-part-1-of-2-marking-http-as-unsecure/</guid><description>Over the past several years there has been increased discussion about deprecating HTTP and making HTTPS the default protocol for the World Wide Web. (HTTP stands for “HyperText Transfer Protocol” and the “S” in HTTPS is enabled with an SSL/TLS digital certificate properly installed and configured on a web server.) These discussions have taken place in the context of browser security indications and technical improvements simplifying the global movement to “Always on HTTPS.</description></item><item><title>What Will Happen With SHA-1 and Browser Users on January 1st, 2016?</title><link>https://pkic.org/2016/01/05/what-will-happen-with-sha-1-and-browser-users-on-january-1st-2016/</link><pubDate>Tue, 05 Jan 2016 19:50:25 +0000</pubDate><guid>https://pkic.org/2016/01/05/what-will-happen-with-sha-1-and-browser-users-on-january-1st-2016/</guid><description>On January 1, 2016, the public trust certification authorities (CAs) will stop issuing SHA-1 signed SSL/TLS certificates. What will happen?
Will all websites using SHA-1 fail? No. SHA-1 will be supported by browsers and operating systems through 2016. Microsoft and Mozilla have announced that Windows and Firefox will not support SHA-1 in 2017, but no change for 2016. We expect Apple to follow the same protocol.
What about Chrome? Chrome will still provide warning indications in the browser status bar for SHA-1 signed certificates which expire in 2016 and in 2017 or later.</description></item><item><title>2016 – Looking Back, Moving Forward</title><link>https://pkic.org/2015/12/14/2016-looking-back-moving-forward/</link><pubDate>Mon, 14 Dec 2015 19:53:24 +0000</pubDate><guid>https://pkic.org/2015/12/14/2016-looking-back-moving-forward/</guid><description>Looking Back at 2015 A number of new tactics proved 2015 was no exception to an active year defending against ever increasing security issues. Vendors found new and creative ways to provide vulnerabilities including the now popular man-in-the-middle (MitM) attacks. MitM as well as a host of other new vulnerabilities caused browsers to rethink their security requirements. This article gives a flashback of the exploits and industry changes from 2015 and looks ahead at the latest security requirements and how it impacts IT security teams.</description></item><item><title>HTTP/2 Is Speedy and Secure</title><link>https://pkic.org/2015/04/20/http/2-is-speedy-and-secure/</link><pubDate>Mon, 20 Apr 2015 15:15:10 +0000</pubDate><guid>https://pkic.org/2015/04/20/http/2-is-speedy-and-secure/</guid><description>Since we last wrote about SSL/TLS performance, there has been a lot of activity in the IETF HTTP Working Group, resulting in the February announcement that the next version of HTTP has been approved. This is big news because it means that major SSL/TLS performance improvements are on the way.
Background When your browser connects to a website today, it most likely uses the HTTP/1.1 protocol that was defined in 1999 in RFC 2616.</description></item><item><title>Lenovo Enables Man-in-the-Middle Attacks Via Superfish Adware</title><link>https://pkic.org/2015/02/20/lenovo-enables-man-in-the-middle-attacks-via-superfish-adware/</link><pubDate>Fri, 20 Feb 2015 22:27:36 +0000</pubDate><guid>https://pkic.org/2015/02/20/lenovo-enables-man-in-the-middle-attacks-via-superfish-adware/</guid><description>Lenovo is selling computers that contain the Superfish application which “supplements” the user’s SSL sessions to enable their adware application to deliver content transparently; however, due to poor security design this leaves users vulnerable to man-in-the-middle attacks.
How it was supposed to work Superfish uses the program “Visual Discovery” to process images in browser content and then displays ads for similar goods and services. This sounds like any other adware application, but in order to maintain SSL sessions and not alert users with security warnings, Superfish is serving up these images over https.</description></item><item><title>2015 – Looking Back, Moving Forward</title><link>https://pkic.org/2015/01/06/2015-looking-back-moving-forward/</link><pubDate>Tue, 06 Jan 2015 16:30:28 +0000</pubDate><guid>https://pkic.org/2015/01/06/2015-looking-back-moving-forward/</guid><description>Looking Back at 2014 End of 1024-Bit Security In 2014, the SSL industry moved to issuing a minimum security of 2048-bit RSA certificates. Keys smaller than 2048 are no longer allowed in server certificates. In addition, Microsoft and Mozilla started to remove 1024-bit roots from their certificate stores. Hopefully, the key size change will support users through to 2030.
Push to Perfect Forward Secrecy Following the Edward Snowden revelations of pervasive surveillance, there was a big push to configure web servers to support Perfect Forward Secrecy.</description></item><item><title>Extra Trips are for Frequent Flyers, Not SSL/TLS Performance</title><link>https://pkic.org/2014/10/30/extra-trips-are-for-frequent-flyers-not-ssl/tls-performance/</link><pubDate>Thu, 30 Oct 2014 16:15:01 +0000</pubDate><guid>https://pkic.org/2014/10/30/extra-trips-are-for-frequent-flyers-not-ssl/tls-performance/</guid><description>TLS is quickly becoming a de facto requirement for every website due to increased concerns about spying and Google’s recent move to use HTTPS as a factor in search engine ranking. In a recent article we explained how HSTS helps website operators to ensure that their site is always using TLS, but now we want to ensure that your performance isn’t sacrificed in the name of enhanced security. While the myth that TLS slows down a website has been debunked, some basic settings can make a site using TLS even faster.</description></item><item><title>Secure Your Website with HSTS</title><link>https://pkic.org/2014/10/08/secure-your-website-with-hsts/</link><pubDate>Wed, 08 Oct 2014 15:05:10 +0000</pubDate><guid>https://pkic.org/2014/10/08/secure-your-website-with-hsts/</guid><description>Is your website secure? One thing to consider is securing your website with HTTP Strict Transport Security (HSTS).
Implementation of HSTS is an extension of the Always-On SSL policy. For each website you want to protect with HSTS, you must first deploy an SSL/TLS certificate (if you haven’t already), and configure that website to be accessible only via HTTPS, not via HTTP. Then you convey to HSTS-enabled browsers that your site is only available with HTTPS, by sending the HSTS header value.</description></item><item><title>In the Wake of Unauthorized Certificate Issuance by the Indian CA NIC, can Government CAs Still be Considered “Trusted Third Parties”?</title><link>https://pkic.org/2014/07/24/in-the-wake-of-unauthorized-certificate-issuance-by-the-indian-ca-nic-can-government-cas-still-be-considered-trusted-third-parties/</link><pubDate>Thu, 24 Jul 2014 21:05:00 +0000</pubDate><guid>https://pkic.org/2014/07/24/in-the-wake-of-unauthorized-certificate-issuance-by-the-indian-ca-nic-can-government-cas-still-be-considered-trusted-third-parties/</guid><description>Short answer: Government CAs can still be considered “trusted third parties,” provided that they follow the rules applicable to commercial CAs.
Introduction On July 8 Google announced that it had discovered several unauthorized Google certificates issued by the National Informatics Centre of India. It noted that the Indian government CA’s certificates were in the Microsoft Root Store and used by programs on the Windows platform. The Firefox browser on Windows uses its own root store and didn’t have these CA certificates.</description></item><item><title>What To Do When You Rely on Internal Names in TLS/SSL Certificates</title><link>https://pkic.org/2014/07/18/what-to-do-when-you-rely-on-internal-names-in-tls/ssl-certificates/</link><pubDate>Fri, 18 Jul 2014 18:20:43 +0000</pubDate><guid>https://pkic.org/2014/07/18/what-to-do-when-you-rely-on-internal-names-in-tls/ssl-certificates/</guid><description>A deadline set by the CA/Browser Forum for the use of Internal Names is quickly approaching, and many system administrators need to understand how best to adapt to this change. At the same time, hundreds of new top-level domains are being launched, which redefines what constitutes an Internal Name. In this post we’ll explain what the changes are, why they’re being made, and how you can update your systems in response to the problem.</description></item><item><title>Always-On SSL, Part II</title><link>https://pkic.org/2014/02/05/always-on-ssl-part-ii/</link><pubDate>Wed, 05 Feb 2014 20:30:25 +0000</pubDate><guid>https://pkic.org/2014/02/05/always-on-ssl-part-ii/</guid><description>The SSL/TLS protocol has more to offer than just providing you with transmission encryption. Its main benefit is that it provides a way for third parties to authenticate connections to your website over the Internet. A user who can connect to your site and retrieve information via SSL/TLS will have greater assurance and trust that information came from you. The point of Always-On SSL is that once a user is able to create an authenticated connection to your point of presence via https, then he or she should not be bounced back outside of that zone of protection.</description></item><item><title>Intermediate CA Certificates and Their Potential For Misuse For Man-In-The-Middle Attacks</title><link>https://pkic.org/2014/01/09/intermediate-ca-certificates-and-their-potential-for-misuse-for-man-in-the-middle-attacks/</link><pubDate>Thu, 09 Jan 2014 21:00:38 +0000</pubDate><guid>https://pkic.org/2014/01/09/intermediate-ca-certificates-and-their-potential-for-misuse-for-man-in-the-middle-attacks/</guid><description>We have seen recently that Google detected that publicly trusted TLS/(SSL) certificates had been created for Google domains without having been requested by Google themselves.
The existence of such certificates might usually be taken as an indication of misissuance by the issuing CA (i.e. a failure or mistake by the CA which allowed the issuance of an end-entity certificate otherwise than in accordance with their policy) or as an indication of compromise of the issuing CA.</description></item><item><title>It’s Time for TLS 1.2</title><link>https://pkic.org/2013/09/19/its-time-for-tls-1.2/</link><pubDate>Thu, 19 Sep 2013 15:00:40 +0000</pubDate><guid>https://pkic.org/2013/09/19/its-time-for-tls-1.2/</guid><description>In a previous post titled Getting the Most Out of SSL Part 2, we touched on the recommendation that Web servers be configured to prefer Transport Layer Security (TLS) version 1.2. With the planned release of Firefox 24 and recent release of Chrome 29 adding support for TLS 1.2, now is a great time for website administrators to make the switch.
Transport Layer Security was formerly called Secure Sockets Layer (SSL) and is the protocol that enables secure “https://” connections to websites.</description></item><item><title>Firefox 23 Blocks Mixed Content</title><link>https://pkic.org/2013/08/13/firefox-23-blocks-mixed-content/</link><pubDate>Tue, 13 Aug 2013 17:50:22 +0000</pubDate><guid>https://pkic.org/2013/08/13/firefox-23-blocks-mixed-content/</guid><description>The latest version of the Firefox Web browser from Mozilla was released on August 6th with a great new security feature called a “mixed content blocker”. In a nutshell, this feature ensures that all of the parts of a secure Website are indeed encrypted via SSL certificates. All of the data on the website is prevented from being intercepted, and it becomes more difficult to add malware into the site’s content.</description></item><item><title>RSA Recap – Securing Your Site</title><link>https://pkic.org/2013/03/08/rsa-recap-securing-your-site/</link><pubDate>Fri, 08 Mar 2013 17:45:55 +0000</pubDate><guid>https://pkic.org/2013/03/08/rsa-recap-securing-your-site/</guid><description>At RSA last week a few of us participated in panel discussions that focused on SSL/TLS. During the panel that I moderated on Friday, one theme we addressed was secure server configuration. One of CASC’s goals is to help harden existing SSL/TLS implementations against vulnerabilities—because most SSL/TLS exploits arise from suboptimal website configurations. These vulnerabilities and attacks can be mitigated or even eliminated with proper server configuration and good website design.</description></item></channel></rss>