<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SSL 3.0 on Public Key Infrastructure (PKI) Consortium</title><link>https://pkic.org/tags/ssl-3.0/</link><description>Recent content in SSL 3.0 on Public Key Infrastructure (PKI) Consortium</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>PKI Consortium, Inc. All Rights Reserved</copyright><lastBuildDate>Thu, 09 Jan 2020 21:00:24 +0000</lastBuildDate><atom:link href="https://pkic.org/tags/ssl-3.0/feed/index.xml" rel="self" type="application/rss+xml"/><item><title>The CA Security Council Looks Ahead to 2020 and Beyond</title><link>https://pkic.org/2020/01/09/the-ca-security-council-looks-ahead-to-2020-and-beyond/</link><pubDate>Thu, 09 Jan 2020 21:00:24 +0000</pubDate><guid>https://pkic.org/2020/01/09/the-ca-security-council-looks-ahead-to-2020-and-beyond/</guid><description>A whirlwind of activity will cause dramatic shifts across the PKI world in the year ahead Suffice it to say that 2019 was filled with challenges and contentiousness as Certificate Authorities and Browsers began to watch their shared visions diverge. The debate around Extended Validation continued as CAs pushed for a range of reforms and browsers pushed to strip its visual indicators. And a ballot to shorten maximum certificate validity periods exposed fault-lines at the CAB Forum.</description></item><item><title>2017 – Looking Back, Moving Forward</title><link>https://pkic.org/2017/01/13/2017-looking-back-moving-forward/</link><pubDate>Fri, 13 Jan 2017 21:11:15 +0000</pubDate><guid>https://pkic.org/2017/01/13/2017-looking-back-moving-forward/</guid><description>Looking Back at 2016 Fortunately, 2016 was not a year full of SSL/TLS vulnerabilities. Although some researchers did prove old cryptography algorithms should be put out to pasture. The year showed the end of public-trusted SHA-1 SSL/TLS certificates. It also showed more transparency should be considered due to issues discovered with a few certification authorities (CAs). The great news is HTTPS is no longer the minority — after 20 years, connections using HTTPS has surpassed HTTP.</description></item><item><title>SSL 2.0 and DROWN</title><link>https://pkic.org/2016/04/04/ssl-2.0-and-drown/</link><pubDate>Mon, 04 Apr 2016 18:41:33 +0000</pubDate><guid>https://pkic.org/2016/04/04/ssl-2.0-and-drown/</guid><description>A team of researchers has announced a vulnerability with SSL 2.0 called Decrypting RSA with Obsolete and Weakened eNcryption; otherwise known as DROWN.
SSL 2.0 is a version of the SSL/TLS security protocols. It was released in February 1995, but due to security flaws was superseded by SSL 3.0 in 1996.
DROWN is a cross-protocol attack where the bugs in SSL 2.0 can be used to attack the security of connections that use TLS.</description></item><item><title>2015 – Looking Back, Moving Forward</title><link>https://pkic.org/2015/01/06/2015-looking-back-moving-forward/</link><pubDate>Tue, 06 Jan 2015 16:30:28 +0000</pubDate><guid>https://pkic.org/2015/01/06/2015-looking-back-moving-forward/</guid><description>Looking Back at 2014 End of 1024-Bit Security In 2014, the SSL industry moved to issuing a minimum security of 2048-bit RSA certificates. Keys smaller than 2048 are no longer allowed in server certificates. In addition, Microsoft and Mozilla started to remove 1024-bit roots from their certificate stores. Hopefully, the key size change will support users through to 2030.
Push to Perfect Forward Secrecy Following the Edward Snowden revelations of pervasive surveillance, there was a big push to configure web servers to support Perfect Forward Secrecy.</description></item><item><title>POODLE for TLS</title><link>https://pkic.org/2014/12/16/poodle-for-tls/</link><pubDate>Tue, 16 Dec 2014 16:10:34 +0000</pubDate><guid>https://pkic.org/2014/12/16/poodle-for-tls/</guid><description>The POODLE attack on SSL 3.0 has now been extended to some implementations of TLS. POODLE for TLS can be tracked through CVE-2014-8730.
POODLE is not a flaw with the certificate authority (CA), SSL certificates or certificate management system. POODLE is a TLS implementation bug.
Adam Langley states that “TLS’s padding is a subset of SSLv3’s padding so, technically, you could use an SSLv3 decoding function with TLS and it would still work fine.</description></item><item><title>A Follow-up on POODLE and SSL 3.0</title><link>https://pkic.org/2014/11/21/a-follow-up-on-poodle-and-ssl-3.0/</link><pubDate>Fri, 21 Nov 2014 15:15:32 +0000</pubDate><guid>https://pkic.org/2014/11/21/a-follow-up-on-poodle-and-ssl-3.0/</guid><description>In October 2014, Google announced POODLE, an SSL 3.0 protocol attack.
To bring you up to speed, the SSL/TLS protocol is the most important and popular security protocol on the Internet. The Secure Sockets Layer (SSL) protocol was developed by Netscape. They quickly moved from SSL 1.0 to 2.0 and finalized with SSL 3.0 in 1996.
This protocol was then picked up by the IETF, who released it under the name of Transport Layer Security (TLS).</description></item><item><title>It’s Time for TLS 1.2</title><link>https://pkic.org/2013/09/19/its-time-for-tls-1.2/</link><pubDate>Thu, 19 Sep 2013 15:00:40 +0000</pubDate><guid>https://pkic.org/2013/09/19/its-time-for-tls-1.2/</guid><description>In a previous post titled Getting the Most Out of SSL Part 2, we touched on the recommendation that Web servers be configured to prefer Transport Layer Security (TLS) version 1.2. With the planned release of Firefox 24 and recent release of Chrome 29 adding support for TLS 1.2, now is a great time for website administrators to make the switch.
Transport Layer Security was formerly called Secure Sockets Layer (SSL) and is the protocol that enables secure “https://” connections to websites.</description></item></channel></rss>