<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TSA on Public Key Infrastructure (PKI) Consortium</title><link>/tags/tsa/</link><description>Recent content in TSA on Public Key Infrastructure (PKI) Consortium</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>PKI Consortium, Inc. All Rights Reserved</copyright><lastBuildDate>Fri, 13 Jan 2017 21:11:15 +0000</lastBuildDate><atom:link href="/tags/tsa/feed/index.xml" rel="self" type="application/rss+xml"/><item><title>2017 – Looking Back, Moving Forward</title><link>/2017/01/13/2017-looking-back-moving-forward/</link><pubDate>Fri, 13 Jan 2017 21:11:15 +0000</pubDate><guid>/2017/01/13/2017-looking-back-moving-forward/</guid><description>Looking Back at 2016 Fortunately, 2016 was not a year full of SSL/TLS vulnerabilities. Although some researchers did prove old cryptography algorithms should be put out to pasture. The year showed the end of public-trusted SHA-1 SSL/TLS certificates. It also showed more transparency should be considered due to issues discovered with a few certification authorities (CAs). The great news is HTTPS is no longer the minority — after 20 years, connections using HTTPS has surpassed HTTP.</description></item><item><title>Leading Certificate Authorities and Microsoft Introduce New Standards to Protect Consumers Online</title><link>/2016/12/08/leading-certificate-authorities-and-microsoft-introduce-new-standards-to-protect-consumers-online/</link><pubDate>Thu, 08 Dec 2016 21:05:41 +0000</pubDate><guid>/2016/12/08/leading-certificate-authorities-and-microsoft-introduce-new-standards-to-protect-consumers-online/</guid><description>San Francisco –December 8, 2016 – the Certificate Authority Security Council (CASC), an advocacy group committed to the advancement web security, today announced the Code Signing Working Group has released new Minimum Requirements for Code Signing for use by all Certificate Authorities (CA). These requirements represent the first-ever standardized code signing guidelines. Code signing is the method of using a certificate-based digital signature to sign executables and scripts in order to verify the author’s identity and ensure that the code has not been changed or corrupted.</description></item><item><title>Minimum Requirements for Code Signing Certificates</title><link>/2016/07/20/minimum-requirements-for-code-signing-certificates/</link><pubDate>Wed, 20 Jul 2016 20:47:02 +0000</pubDate><guid>/2016/07/20/minimum-requirements-for-code-signing-certificates/</guid><description>It is time for an update on the Baseline Requirements for Code Signing.
First the bad news, the new standard was not approved by the CA/Browser Forum due to philosophical differences among some forum members who felt code signing was not in scope with the Forum’s charter.
The good news is the document was created in a multi-stakeholder environment and substantially improves the current management processes. As such, it was decided to bring the document outside of the forum and finalize it as part of the CA Security Council.</description></item><item><title>What Is Certificate Transparency and How Does It Propose to Address Certificate Mis-Issuance?</title><link>/2013/09/09/what-is-certificate-transparency-and-how-does-it-propose-to-address-certificate-mis-issuance/</link><pubDate>Mon, 09 Sep 2013 15:00:52 +0000</pubDate><guid>/2013/09/09/what-is-certificate-transparency-and-how-does-it-propose-to-address-certificate-mis-issuance/</guid><description>As originally architected by Netscape and others in the mid-1990s, the certificate issuance process envisioned that the CA would present the certificate and its contents to the named subject who would review and accept the certificate first. Then the CA would publish the certificate to a repository. That process would establish that the certificate’s subject was aware of certificate issuance. (Otherwise, an unscrupulous CA could sign a subscriber’s public key and create a certificate for the subscriber without its knowledge.</description></item></channel></rss>