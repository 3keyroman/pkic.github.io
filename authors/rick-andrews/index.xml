<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rick Andrews on Public Key Infrastructure (PKI) Consortium</title><link>https://pkic.org/authors/rick-andrews/</link><description>Recent content in Rick Andrews on Public Key Infrastructure (PKI) Consortium</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>PKI Consortium, Inc. All Rights Reserved</copyright><lastBuildDate>Fri, 30 Sep 2016 17:12:49 +0000</lastBuildDate><atom:link href="https://pkic.org/authors/rick-andrews/index.xml" rel="self" type="application/rss+xml"/><item><title>Always-On SSL</title><link>https://pkic.org/2016/09/30/always-on-ssl/</link><pubDate>Fri, 30 Sep 2016 17:12:49 +0000</pubDate><guid>https://pkic.org/2016/09/30/always-on-ssl/</guid><description>There is no doubt that content owners and publishers have a duty to encourage trust and the confidence during internet usage by adopting security best practices. If a customer believes that their data and identity are safe and protected, they are more inclined to continue their online transactions. Industry best practices for website protection should be vendor-neutral, easy to implement, and globally accessible. Websites should take all the reasonable steps possible to adopt best practices in secure design and implementation, and this includes using Always-On SSL across the entire website.</description></item><item><title>TLS Certificates on the Web – The Good, The Bad and The Ugly</title><link>https://pkic.org/2016/05/17/tls-certificates-on-the-web-the-good-the-bad-and-the-ugly/</link><pubDate>Tue, 17 May 2016 14:30:47 +0000</pubDate><guid>https://pkic.org/2016/05/17/tls-certificates-on-the-web-the-good-the-bad-and-the-ugly/</guid><description>It might be hard to believe, but the SSL/TLS Ecosystem is nearly 20 years old. It’s time to take stock and see how we’re doing with regards to TLS certificates. In this article, we’ll primarily discuss certificates themselves and not web server configuration, although that is often a source of problems.
In the last few years, we’ve endured three major certificate-based migrations:
Away from the MD2 and MD5 hash algorithms to SHA-1 Away from small RSA keys to 2048-bit keys or larger Away from the SHA-1 hash algorithm to SHA-256 What’s driving these migrations?</description></item><item><title>New Directions for Elliptic Curve Cryptography in Internet Protocols</title><link>https://pkic.org/2015/06/24/new-directions-for-elliptic-curve-cryptography-in-internet-protocols/</link><pubDate>Wed, 24 Jun 2015 18:15:52 +0000</pubDate><guid>https://pkic.org/2015/06/24/new-directions-for-elliptic-curve-cryptography-in-internet-protocols/</guid><description>Last week I attended and presented at the National Institute of Standards and Technology (NIST) Workshop on Elliptic Curve Cryptography Standards. In NIST’s words, “The workshop is to provide a venue to engage the crypto community, including academia, industry, and government users to discuss possible approaches to promote the adoption of secure, interoperable and efficient elliptic curve mechanisms.”
We began by discussing the reasons for holding this workshop. Speakers acknowledged that although there are no known issues with the current set of NIST curves, in some circles they are widely distrusted.</description></item><item><title>The Insecurity of Mobile Applications</title><link>https://pkic.org/2015/06/11/the-insecurity-of-mobile-applications/</link><pubDate>Thu, 11 Jun 2015 18:30:23 +0000</pubDate><guid>https://pkic.org/2015/06/11/the-insecurity-of-mobile-applications/</guid><description>Recently, we read about lots of SSL/TLS-related vulnerabilities found in mobile apps, which should come as no surprise. We were warned about this back in 2012 (see these studies). More warnings came in 2014 from CERT and FireEye. The Open Web Application Security Project (OWASP) listed “insufficient transport layer protection” as number three (#3) in its top 10 list of mobile security problems of 2014. Apps that don’t use SSL/TLS are particularly vulnerable, given the ease of reading and modifying unsecured traffic at Wi-Fi hot spots, for example.</description></item><item><title>My Website’s SSL Certificate is Fine; Why Do Browsers Downgrade the Security Indicators For My Site?</title><link>https://pkic.org/2015/04/01/my-websites-ssl-certificate-is-fine-why-do-browsers-downgrade-the-security-indicators-for-my-site/</link><pubDate>Wed, 01 Apr 2015 16:19:02 +0000</pubDate><guid>https://pkic.org/2015/04/01/my-websites-ssl-certificate-is-fine-why-do-browsers-downgrade-the-security-indicators-for-my-site/</guid><description>All the major browsers provide “security user interface”, meaning visual elements to inform the user of the security of their connection to the web page they’re visiting. Up until now, those interface elements were tied to the use of SSL/TLS certificates served by the web site. For example, if you went to http://www.example.com, no special elements would be displayed, but if you visited https://www.example.com, you would see a lock icon indicating the presence of a trusted SSL/TLS certificate.</description></item><item><title>Gogo Found Spoofing Google SSL Certificates</title><link>https://pkic.org/2015/01/08/gogo-found-spoofing-google-ssl-certificates/</link><pubDate>Thu, 08 Jan 2015 19:17:13 +0000</pubDate><guid>https://pkic.org/2015/01/08/gogo-found-spoofing-google-ssl-certificates/</guid><description>It was recently disclosed that Gogo, a provider of Wi-Fi Internet services on commercial aircraft, has been issuing spoofed SSL certificates for Google sites that were viewed by customers of Gogo’s service. It appears that Gogo Inflight Internet was acting as an SSL Man-in-the-middle (MITM), a technique used within some enterprises to allow themselves to inspect and control all web traffic, even traffic to secure web sites. To understand what this means, let me explain MITM in a bit more detail.</description></item><item><title>The Cost of Creating Collisions Using SHA-1</title><link>https://pkic.org/2014/11/18/the-cost-of-creating-collisions-using-sha-1/</link><pubDate>Tue, 18 Nov 2014 18:30:21 +0000</pubDate><guid>https://pkic.org/2014/11/18/the-cost-of-creating-collisions-using-sha-1/</guid><description>SHA-1 is a cryptographic hash algorithm that is most commonly used today in TLS/SSL certificates on the Internet. It has almost completely replaced older algorithms like MD2, MD4 and MD5, which were phased out when practical attacks against those algorithms became widely known.
If you do a simple web search, you’ll find a number of online services that claim to “crack” SHA-1 and other hash functions. These generally use a computer’s CPU to build and search through a rainbow table, which contains the hash value that results from a number of expected inputs, and allows you to “reverse” the hash algorithm.</description></item><item><title>OCSP Must-Staple</title><link>https://pkic.org/2014/06/18/ocsp-must-staple/</link><pubDate>Wed, 18 Jun 2014 18:50:27 +0000</pubDate><guid>https://pkic.org/2014/06/18/ocsp-must-staple/</guid><description>With the announcement of the Heartbleed bug and the resulting need to revoke large numbers of SSL certificates, the topic of certificate revocation has, once again, come to the fore.
There have been many issues with how revocation information is provided to the browsers. First let’s review how SSL certificate status may currently be obtained: How
How Definition Pros Cons Certificate Revocation List (CRL) A signed list of the serial numbers of all revoked certificates that were signed by the CA’s certificate.</description></item><item><title>Perfect Forward Secrecy</title><link>https://pkic.org/2014/04/11/perfect-forward-secrecy/</link><pubDate>Fri, 11 Apr 2014 16:30:26 +0000</pubDate><guid>https://pkic.org/2014/04/11/perfect-forward-secrecy/</guid><description>Recent revelations from Edward Snowden about pervasive government surveillance have led to many questions about the safety of communications using the SSL/TLS protocol. Such communications are generally safe from eavesdroppers, as long as certain precautions are observed. For example, configuring your web server to avoid using SSL2 and SSL3, favoring newer versions of TLS like TLS 1.2, selecting strong ciphersuites, etc.
But even if your server is configured properly, you still must secure the private key associated with your SSL certificate.</description></item><item><title>Always-On SSL, Part I</title><link>https://pkic.org/2014/01/16/always-on-ssl-part-i/</link><pubDate>Thu, 16 Jan 2014 16:00:40 +0000</pubDate><guid>https://pkic.org/2014/01/16/always-on-ssl-part-i/</guid><description>There is no doubt that content owners and publishers have a duty to encourage trust and the confidence during internet usage by adopting security best practices. If a customer believes that their data and identity are safe and protected, they are more inclined to continue their online transactions. Industry best practices for website protection should be vendor-neutral, easy to implement, and globally accessible. Websites should take all the reasonable steps possible to adopt best practices in secure design and implementation, and this includes using Always-On SSL across the entire website.</description></item><item><title>What is Certification Authority Authorization?</title><link>https://pkic.org/2013/09/25/what-is-certification-authority-authorization/</link><pubDate>Wed, 25 Sep 2013 17:00:11 +0000</pubDate><guid>https://pkic.org/2013/09/25/what-is-certification-authority-authorization/</guid><description>DNS Certification Authority Authorization (CAA), defined in IETF draft RFC 6844, is designed to allow a DNS domain name holder (a website owner) to specify the certificate signing certificate(s) authorized to issue certificates for that domain or website. Usually, the certificate signing certificate will belong to the Certification Authority (CA) that issues SSL certificates to you. It’s a way for you to indicate which CA or CAs you want to issue certificates for your domains.</description></item><item><title>Getting the Most Out of SSL Part 3: Optimization</title><link>https://pkic.org/2013/07/29/getting-the-most-out-of-ssl-part-3-optimization/</link><pubDate>Mon, 29 Jul 2013 15:03:42 +0000</pubDate><guid>https://pkic.org/2013/07/29/getting-the-most-out-of-ssl-part-3-optimization/</guid><description>To get the most out of SSL/TLS, you need to do a bit more than just configure your web server with an SSL certificate. The information below will help you optimize your website’s use of SSL. Making the changes suggested below will also help move your site towards “Always On SSL” (https://otalliance.org/resources/AOSSL/index.html), a best practice in which you serve the entire contents of your website over SSL/TLS.
Changes to the content of your website Some HTML tags can include attributes that are links or paths to other pages on your site.</description></item><item><title>Recap of NIST’s Workshop on Improving Trust in the Online Marketplace</title><link>https://pkic.org/2013/04/17/recap-of-nists-workshop-on-improving-trust-in-the-online-marketplace/</link><pubDate>Wed, 17 Apr 2013 18:29:25 +0000</pubDate><guid>https://pkic.org/2013/04/17/recap-of-nists-workshop-on-improving-trust-in-the-online-marketplace/</guid><description>On April 10 and 11, NIST held a workshop in Maryland to bring together many parties (industry, research and academia communities, and government sectors) to examine “technical and administrative efforts to increase trust online by improving the Public Key Infrastructure certificate marketplace supporting SSL and TLS.”
From the opening keynote to the final remarks, we heard from experts around the world. There were presentations on the current state of trust infrastructure and audits, the impact of recent breaches, detailed looks on some emerging solutions like Certificate Transparency and DANE, and new ideas to manage and minimize risk in key usage.</description></item><item><title>All You Need to Know About the RC4 Encryption Scheme</title><link>https://pkic.org/2013/03/14/all-you-need-to-know-about-the-rc4-encryption-scheme/</link><pubDate>Thu, 14 Mar 2013 21:12:28 +0000</pubDate><guid>https://pkic.org/2013/03/14/all-you-need-to-know-about-the-rc4-encryption-scheme/</guid><description>The latest published attacks target specific algorithms used within SSL/TLS. Those algorithms are used when a client connects to a server via SSL/TLS; they’re not used when a Certificate Authority signs a certificate. The attacks demonstrate potential weaknesses in the use of the algorithms.
While interesting, the attacks don’t represent an immediate practical threat to users of SSL/TLS (including online banking, e-commerce, social networking, etc.). Such attacks require an attacker to run malicious software on a user’s computer which would connect to a particular web site and send the same message over and over again many times.</description></item><item><title>The Importance of Checking for Certificate Revocation</title><link>https://pkic.org/2013/03/09/the-importance-of-checking-for-certificate-revocation/</link><pubDate>Sat, 09 Mar 2013 03:50:21 +0000</pubDate><guid>https://pkic.org/2013/03/09/the-importance-of-checking-for-certificate-revocation/</guid><description>Certificates are typically valid for one to three years, and during that time it’s possible that the web site owner or the CA realizes that end users should not trust the certificate. There are several cases in which this might happen, including these:
The web site owner ceases doing business, no longer owns the domain name used in the certificate, has changed their organization name, or wishes to shut down the web server.</description></item></channel></rss>