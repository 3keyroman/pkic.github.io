<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bruce Morton on Public Key Infrastructure (PKI) Consortium</title><link>https://pkic.org/authors/bruce-morton/</link><description>Recent content in Bruce Morton on Public Key Infrastructure (PKI) Consortium</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>PKI Consortium, Inc. All Rights Reserved</copyright><lastBuildDate>Fri, 06 Dec 2019 16:52:24 +0000</lastBuildDate><atom:link href="https://pkic.org/authors/bruce-morton/index.xml" rel="self" type="application/rss+xml"/><item><title>Chrome Kills Mixed Content for HTTPS</title><link>https://pkic.org/2019/12/06/chrome-kills-mixed-content-for-https/</link><pubDate>Fri, 06 Dec 2019 16:52:24 +0000</pubDate><guid>https://pkic.org/2019/12/06/chrome-kills-mixed-content-for-https/</guid><description>In a phased approach, Chrome plans to block mixed content on secure websites to improve user security. Most browsers already block some mixed content such as scripts and iframes by default. Chrome is amping it up by gradually taking steps to also block images, audio recordings and videos, according to a recent Google Security blog. Preventing mixed content to load will eventually result in HTTPS websites losing their security indicator downgrading the site to HTTP, which alerts visitors that the site is not secure.</description></item><item><title>2019 – Looking Back, Moving Forward</title><link>https://pkic.org/2019/01/03/2019-looking-back-moving-forward/</link><pubDate>Thu, 03 Jan 2019 14:24:26 +0000</pubDate><guid>https://pkic.org/2019/01/03/2019-looking-back-moving-forward/</guid><description>Looking Back at 2018 2018 was an active year for SSL/TLS. We saw the SSL/TLS certificate validity period drop to 825-days and the mass deployment of Certificate Transparency (CT). TLS 1.3 protocol was finally completed and published; and Chrome status bar security indicators changing to remove “secure” and to concentrate on “not secure.” The CA/Browser Forum has been reformed, the London Protocol was announced and the nearly full distrust of Symantec SSL completed.</description></item><item><title>CA Security Council (CASC) 2019 Predictions: The Good, the Bad, and the Ugly</title><link>https://pkic.org/2018/12/06/ca-security-council-casc-2019-predictions-the-good-the-bad-and-the-ugly/</link><pubDate>Thu, 06 Dec 2018 18:07:15 +0000</pubDate><guid>https://pkic.org/2018/12/06/ca-security-council-casc-2019-predictions-the-good-the-bad-and-the-ugly/</guid><description>As the legendary coach of the NY Yankees Yogi Berra allegedly said, “It’s difficult to make predictions, especially about the future.” But we’re going to try.
Here are the CA Security Council (CASC) 2019 Predictions: The Good, the Bad, and the Ugly.
The Good Prediction: By the end of 2019, over 90% of the world’s http traffic will be secured over SSL/TLS
Encryption boosts user security and privacy, and the combined efforts of browsers and Certification Authorities (CAs) over the past few years have moved us rapidly to a world approaching 100% encryption.</description></item><item><title>Chrome Will Show Not Secure for all HTTP Sites Starting July 2018</title><link>https://pkic.org/2018/02/15/chrome-will-show-not-secure-for-all-http-sites-starting-july-2018/</link><pubDate>Thu, 15 Feb 2018 18:30:48 +0000</pubDate><guid>https://pkic.org/2018/02/15/chrome-will-show-not-secure-for-all-http-sites-starting-july-2018/</guid><description>Through 2017 and into 2018, we have seen the use of HTTPS grow substantially. Last Fall Google announced the following status:
Over 68% of Chrome traffic on both Android and Windows is now protected Over 78% of Chrome traffic on both Chrome OS and Mac is now protected 81 of the top 100 sites on the web use HTTPS by default Google helped to drive this growth by implementing the “Secure” and “Not secure” status in Chrome’s status bar.</description></item><item><title>2018 – Looking Back, Moving Forward</title><link>https://pkic.org/2018/01/06/2018-looking-back-moving-forward/</link><pubDate>Sat, 06 Jan 2018 14:31:22 +0000</pubDate><guid>https://pkic.org/2018/01/06/2018-looking-back-moving-forward/</guid><description>Looking Back at 2017 2017 saw the end of SHA-1 in public trust SSL/TLS certificates and the start of Certification Authority Authorization (CAA) allowing domain owners to authorize their CA. A “Not secure” browser indication was propagated to push more websites to support HTTPS. There was also a change in the certification authority (CA) ownership with DigiCert acquiring Symantec’s SSL and related PKI business and Francisco Partners buying Comodo’s CA.</description></item><item><title>Certificate Transparency Deadline Moved to April 2018</title><link>https://pkic.org/2017/05/03/certificate-transparency-deadline-moved-to-april-2018/</link><pubDate>Wed, 03 May 2017 15:42:21 +0000</pubDate><guid>https://pkic.org/2017/05/03/certificate-transparency-deadline-moved-to-april-2018/</guid><description>Google just announced they will not be enforcing certificate transparency (CT) logging for all new TLS certificates until April 2018. In a previous blog post, we advised that Google provided a new policy, which required new TLS certificates to be published to the CT logs in order for the domain to be trusted by Chrome.
The reason for the delay was not clear, but Google needs to consider the following:</description></item><item><title>2017 – Looking Back, Moving Forward</title><link>https://pkic.org/2017/01/13/2017-looking-back-moving-forward/</link><pubDate>Fri, 13 Jan 2017 21:11:15 +0000</pubDate><guid>https://pkic.org/2017/01/13/2017-looking-back-moving-forward/</guid><description>Looking Back at 2016 Fortunately, 2016 was not a year full of SSL/TLS vulnerabilities. Although some researchers did prove old cryptography algorithms should be put out to pasture. The year showed the end of public-trusted SHA-1 SSL/TLS certificates. It also showed more transparency should be considered due to issues discovered with a few certification authorities (CAs). The great news is HTTPS is no longer the minority — after 20 years, connections using HTTPS has surpassed HTTP.</description></item><item><title>Stricter Standards for SSL Server Test Coming in 2017</title><link>https://pkic.org/2016/12/13/stricter-standards-for-ssl-server-test-coming-in-2017/</link><pubDate>Tue, 13 Dec 2016 16:32:08 +0000</pubDate><guid>https://pkic.org/2016/12/13/stricter-standards-for-ssl-server-test-coming-in-2017/</guid><description>This is a good time to offer a reminder that the CASC has a great tool for secure server testing, the SSL Server Test. The tool grades your server installation and reviews the: certificate, protocol support, key exchange and cipher strength for security against standards and known vulnerabilities.
The grading tool also provides feedback on handshake simulations with various versions of browsers and operating systems. This lets the server administrator know which implementations are supported.</description></item><item><title>Why Is Certificate Expiration Necessary?</title><link>https://pkic.org/2016/10/19/why-is-certificate-expiration-necessary/</link><pubDate>Wed, 19 Oct 2016 16:26:21 +0000</pubDate><guid>https://pkic.org/2016/10/19/why-is-certificate-expiration-necessary/</guid><description>The Long Life Certificate – Why It Doesn’t Exist Why is certificate expiration even necessary? Wouldn’t it be better if I could just buy a certificate with a long life before expiration? It would really simplify certificate management if it could be installed and forgotten. Simple, no management required, just file-and-forget.
Imagine, I’ve been in business, starting say 10 to 15 years ago. I roll out my web pages and secure them with a 20-year-validity SSL certificate.</description></item><item><title>Chrome to Show HTTP Sites as Not Secure</title><link>https://pkic.org/2016/09/15/chrome-to-show-http-sites-as-not-secure/</link><pubDate>Thu, 15 Sep 2016 18:59:31 +0000</pubDate><guid>https://pkic.org/2016/09/15/chrome-to-show-http-sites-as-not-secure/</guid><description>Always-On SSL should be deployed to prevent the “Not secure” warning Website owners who do not secure their website with an SSL/TLS certificate will have to rethink their online strategy. In a push to make the Internet safer for all users, Google will soon be issuing a stronger warning to visitors who navigate to a website that does not have the protection of an SSL/TLS certificate.
With the release of Chrome 53 on Windows, Google has changed the trust indications to introduce the circle-i.</description></item><item><title>How a SWEET32 Birthday Attack is Deployed and How to Prevent It</title><link>https://pkic.org/2016/09/07/how-a-sweet32-birthday-attack-is-deployed-and-how-to-prevent-it/</link><pubDate>Wed, 07 Sep 2016 17:02:37 +0000</pubDate><guid>https://pkic.org/2016/09/07/how-a-sweet32-birthday-attack-is-deployed-and-how-to-prevent-it/</guid><description>Details surrounding the SWEET32: Birthday attacks on 64-bit block ciphers in TLS and OpenVPN can be found in the paper released by Karthikeyan Bhargavan and Gaëtan Leurent from INRIA in France. The paper shows that cipher suites using 64-bit block length ciphers are vulnerable to plaintext recovery attacks. As such, Triple-DES (3DES) and Blowfish are vulnerable. Here’s an overview.
Vulnerabilities to a SWEET32 Birthday Attack Certain scenarios are pre-disposed to a SWEET32 Birthday attack.</description></item><item><title>Trust Indication Change in Google Chrome</title><link>https://pkic.org/2016/08/24/trust-indication-change-in-google-chrome/</link><pubDate>Wed, 24 Aug 2016 15:52:59 +0000</pubDate><guid>https://pkic.org/2016/08/24/trust-indication-change-in-google-chrome/</guid><description>Google is making security icon changes in the Chrome status bar. The changes are based on a research paper prepared by members of Google and University of California, Berkeley. The research evaluated forty icons, seven complementary strings and surveyed 1,329 people.
The goal is to make it easier for browser users to determine how secure their connection to a site is and indicate if the site is dangerous or deceptive. In addition, the icons are to indicate to people that HTTP is less secure than HTTPS.</description></item><item><title>Minimum Requirements for Code Signing Certificates</title><link>https://pkic.org/2016/07/20/minimum-requirements-for-code-signing-certificates/</link><pubDate>Wed, 20 Jul 2016 20:47:02 +0000</pubDate><guid>https://pkic.org/2016/07/20/minimum-requirements-for-code-signing-certificates/</guid><description>It is time for an update on the Baseline Requirements for Code Signing.
First the bad news, the new standard was not approved by the CA/Browser Forum due to philosophical differences among some forum members who felt code signing was not in scope with the Forum’s charter.
The good news is the document was created in a multi-stakeholder environment and substantially improves the current management processes. As such, it was decided to bring the document outside of the forum and finalize it as part of the CA Security Council.</description></item><item><title>SSL 2.0 and DROWN</title><link>https://pkic.org/2016/04/04/ssl-2.0-and-drown/</link><pubDate>Mon, 04 Apr 2016 18:41:33 +0000</pubDate><guid>https://pkic.org/2016/04/04/ssl-2.0-and-drown/</guid><description>A team of researchers has announced a vulnerability with SSL 2.0 called Decrypting RSA with Obsolete and Weakened eNcryption; otherwise known as DROWN.
SSL 2.0 is a version of the SSL/TLS security protocols. It was released in February 1995, but due to security flaws was superseded by SSL 3.0 in 1996.
DROWN is a cross-protocol attack where the bugs in SSL 2.0 can be used to attack the security of connections that use TLS.</description></item><item><title>What Will Happen With SHA-1 and Browser Users on January 1st, 2016?</title><link>https://pkic.org/2016/01/05/what-will-happen-with-sha-1-and-browser-users-on-january-1st-2016/</link><pubDate>Tue, 05 Jan 2016 19:50:25 +0000</pubDate><guid>https://pkic.org/2016/01/05/what-will-happen-with-sha-1-and-browser-users-on-january-1st-2016/</guid><description>On January 1, 2016, the public trust certification authorities (CAs) will stop issuing SHA-1 signed SSL/TLS certificates. What will happen?
Will all websites using SHA-1 fail? No. SHA-1 will be supported by browsers and operating systems through 2016. Microsoft and Mozilla have announced that Windows and Firefox will not support SHA-1 in 2017, but no change for 2016. We expect Apple to follow the same protocol.
What about Chrome? Chrome will still provide warning indications in the browser status bar for SHA-1 signed certificates which expire in 2016 and in 2017 or later.</description></item><item><title>2016 – Looking Back, Moving Forward</title><link>https://pkic.org/2015/12/14/2016-looking-back-moving-forward/</link><pubDate>Mon, 14 Dec 2015 19:53:24 +0000</pubDate><guid>https://pkic.org/2015/12/14/2016-looking-back-moving-forward/</guid><description>Looking Back at 2015 A number of new tactics proved 2015 was no exception to an active year defending against ever increasing security issues. Vendors found new and creative ways to provide vulnerabilities including the now popular man-in-the-middle (MitM) attacks. MitM as well as a host of other new vulnerabilities caused browsers to rethink their security requirements. This article gives a flashback of the exploits and industry changes from 2015 and looks ahead at the latest security requirements and how it impacts IT security teams.</description></item><item><title>OpenSSL High Severity Vulnerability</title><link>https://pkic.org/2015/07/10/openssl-high-severity-vulnerability/</link><pubDate>Fri, 10 Jul 2015 20:14:48 +0000</pubDate><guid>https://pkic.org/2015/07/10/openssl-high-severity-vulnerability/</guid><description>OpenSSL has announced a high severity vulnerability, CVE-2015-1793 which will require an upgrade to some OpenSSL installations.
The vulnerability was discovered by Google personnel Adam Langley and David Benjamin on June 24, 2015. Google has been working on an alternative to OpenSSL called BoringSSL. This has allowed Google to reduce vulnerabilities in their installations, but is also a benefit to OpenSSL as issues have been reported. Note that BoringSSL is not impacted.</description></item><item><title>Server Name Indication and Fewer IP Addresses</title><link>https://pkic.org/2015/06/02/server-name-indication-and-fewer-ip-addresses/</link><pubDate>Tue, 02 Jun 2015 17:30:03 +0000</pubDate><guid>https://pkic.org/2015/06/02/server-name-indication-and-fewer-ip-addresses/</guid><description>You have a dilemma. You want to continue to deploy your web service but are running out of IPv4 addresses. You consider deploying multiple virtual servers that will use the same IP address. However, your thought is that you can only have one SSL certificate per IP address. How will you make your service secure?
Server Name Indication (SNI) is an extension to the SSL/TLS protocol that allows the browser or client software to indicate which hostname it is attempting to connect.</description></item><item><title>Microsoft Deploys Certificate Reputation</title><link>https://pkic.org/2015/04/09/microsoft-deploys-certificate-reputation/</link><pubDate>Thu, 09 Apr 2015 19:00:24 +0000</pubDate><guid>https://pkic.org/2015/04/09/microsoft-deploys-certificate-reputation/</guid><description>As we have stated previously, website owners have a concern that an attacker can have a certificate issued for their domain name. We now have two systems which will help monitor certificates for domains: Certificate Transparency (CT) and Certificate Reputation.
At the start of 2015, most certification authorities (CAs) support CT as requested by Google. CT works for extended validation (EV) SSL certificates and will allow all EV certificates to be monitored.</description></item><item><title>Is Your SSL Server Vulnerable to a FREAK Attack?</title><link>https://pkic.org/2015/03/11/is-your-ssl-server-vulnerable-to-a-freak-attack/</link><pubDate>Wed, 11 Mar 2015 16:00:22 +0000</pubDate><guid>https://pkic.org/2015/03/11/is-your-ssl-server-vulnerable-to-a-freak-attack/</guid><description>FREAK is a new man-in-the-middle (MITM) vulnerability discovered by a group of cryptographers at INRIA, Microsoft Research and IMDEA. FREAK stands for “Factoring RSA-EXPORT Keys.”
The vulnerability dates back to the 1990s, when the US government banned selling crypto software overseas, unless it used export cipher suites which involved encryption keys no longer than 512-bits.
The issue is there are still some clients who let crypto be degraded from “strong RSA” to “export grade RSA”.</description></item><item><title>2015 – Looking Back, Moving Forward</title><link>https://pkic.org/2015/01/06/2015-looking-back-moving-forward/</link><pubDate>Tue, 06 Jan 2015 16:30:28 +0000</pubDate><guid>https://pkic.org/2015/01/06/2015-looking-back-moving-forward/</guid><description>Looking Back at 2014 End of 1024-Bit Security In 2014, the SSL industry moved to issuing a minimum security of 2048-bit RSA certificates. Keys smaller than 2048 are no longer allowed in server certificates. In addition, Microsoft and Mozilla started to remove 1024-bit roots from their certificate stores. Hopefully, the key size change will support users through to 2030.
Push to Perfect Forward Secrecy Following the Edward Snowden revelations of pervasive surveillance, there was a big push to configure web servers to support Perfect Forward Secrecy.</description></item><item><title>POODLE for TLS</title><link>https://pkic.org/2014/12/16/poodle-for-tls/</link><pubDate>Tue, 16 Dec 2014 16:10:34 +0000</pubDate><guid>https://pkic.org/2014/12/16/poodle-for-tls/</guid><description>The POODLE attack on SSL 3.0 has now been extended to some implementations of TLS. POODLE for TLS can be tracked through CVE-2014-8730.
POODLE is not a flaw with the certificate authority (CA), SSL certificates or certificate management system. POODLE is a TLS implementation bug.
Adam Langley states that “TLS’s padding is a subset of SSLv3’s padding so, technically, you could use an SSLv3 decoding function with TLS and it would still work fine.</description></item><item><title>A Follow-up on POODLE and SSL 3.0</title><link>https://pkic.org/2014/11/21/a-follow-up-on-poodle-and-ssl-3.0/</link><pubDate>Fri, 21 Nov 2014 15:15:32 +0000</pubDate><guid>https://pkic.org/2014/11/21/a-follow-up-on-poodle-and-ssl-3.0/</guid><description>In October 2014, Google announced POODLE, an SSL 3.0 protocol attack.
To bring you up to speed, the SSL/TLS protocol is the most important and popular security protocol on the Internet. The Secure Sockets Layer (SSL) protocol was developed by Netscape. They quickly moved from SSL 1.0 to 2.0 and finalized with SSL 3.0 in 1996.
This protocol was then picked up by the IETF, who released it under the name of Transport Layer Security (TLS).</description></item><item><title>Secure Your Website with HSTS</title><link>https://pkic.org/2014/10/08/secure-your-website-with-hsts/</link><pubDate>Wed, 08 Oct 2014 15:05:10 +0000</pubDate><guid>https://pkic.org/2014/10/08/secure-your-website-with-hsts/</guid><description>Is your website secure? One thing to consider is securing your website with HTTP Strict Transport Security (HSTS).
Implementation of HSTS is an extension of the Always-On SSL policy. For each website you want to protect with HSTS, you must first deploy an SSL/TLS certificate (if you haven’t already), and configure that website to be accessible only via HTTPS, not via HTTP. Then you convey to HSTS-enabled browsers that your site is only available with HTTPS, by sending the HSTS header value.</description></item><item><title>OCSP Must-Staple</title><link>https://pkic.org/2014/06/18/ocsp-must-staple/</link><pubDate>Wed, 18 Jun 2014 18:50:27 +0000</pubDate><guid>https://pkic.org/2014/06/18/ocsp-must-staple/</guid><description>With the announcement of the Heartbleed bug and the resulting need to revoke large numbers of SSL certificates, the topic of certificate revocation has, once again, come to the fore.
There have been many issues with how revocation information is provided to the browsers. First let’s review how SSL certificate status may currently be obtained: How
How Definition Pros Cons Certificate Revocation List (CRL) A signed list of the serial numbers of all revoked certificates that were signed by the CA’s certificate.</description></item><item><title>Perfect Forward Secrecy</title><link>https://pkic.org/2014/04/11/perfect-forward-secrecy/</link><pubDate>Fri, 11 Apr 2014 16:30:26 +0000</pubDate><guid>https://pkic.org/2014/04/11/perfect-forward-secrecy/</guid><description>Recent revelations from Edward Snowden about pervasive government surveillance have led to many questions about the safety of communications using the SSL/TLS protocol. Such communications are generally safe from eavesdroppers, as long as certain precautions are observed. For example, configuring your web server to avoid using SSL2 and SSL3, favoring newer versions of TLS like TLS 1.2, selecting strong ciphersuites, etc.
But even if your server is configured properly, you still must secure the private key associated with your SSL certificate.</description></item><item><title>Certificate Reputation</title><link>https://pkic.org/2014/03/28/certificate-reputation/</link><pubDate>Fri, 28 Mar 2014 14:00:37 +0000</pubDate><guid>https://pkic.org/2014/03/28/certificate-reputation/</guid><description>One of the advantages of having multiple certification authorities (CAs) from which to choose an SSL certificate is that customers have flexibility to choose a CA that meets their specific needs, or even use a number of CAs for redundancy or to have access to a broader toolset. The disadvantage for end users, however, is that they often may not know if a particular CA was authorized to issue the certificate, and there could be a chance that the certificate was fraudulently obtained.</description></item><item><title>Bogus SSL Certificates</title><link>https://pkic.org/2014/02/20/bogus-ssl-certificates/</link><pubDate>Thu, 20 Feb 2014 22:30:12 +0000</pubDate><guid>https://pkic.org/2014/02/20/bogus-ssl-certificates/</guid><description>Netcraft has published an article stating they have found many bogus SSL certificates. In this case, a bogus certificate is self-signed (i.e., not issued from a legitimate certification authority) and replicates an SSL certificate of a large, popular website.
This type of bogus SSL certificate could be used for a man-in-the-middle (MITM) attack. In this scenario, the attacker needs to gain a position that will allow them to intercept traffic and make you to go to their site instead of the real site.</description></item><item><title>Why We Need to Move to SHA-2</title><link>https://pkic.org/2014/01/30/why-we-need-to-move-to-sha-2/</link><pubDate>Thu, 30 Jan 2014 18:30:55 +0000</pubDate><guid>https://pkic.org/2014/01/30/why-we-need-to-move-to-sha-2/</guid><description>Previously, we advised that the SSL industry must move to the SHA-2 hashing algorithm for certificate signatures. We thought it would be helpful to provide the reasoning behind the position.
In the context of SSL, the purpose of a hashing algorithm is to reduce a message (e.g., a certificate) to a reasonable size for use with a digital signature algorithm. The hash value, or message digest, is then signed to allow an end-user to validate the certificate and ensure it was issued by a trusted certification authority (CA).</description></item><item><title>2014 – Looking Back, Moving Forward</title><link>https://pkic.org/2014/01/06/2014-looking-back-moving-forward/</link><pubDate>Mon, 06 Jan 2014 20:00:12 +0000</pubDate><guid>https://pkic.org/2014/01/06/2014-looking-back-moving-forward/</guid><description>Looking Back at 2013 Protocol Attacks The year started with a couple of SSL/TLS protocol attacks: Lucky Thirteen and RC4 attack. Lucky Thirteen allows the decryption of sensitive information, such as passwords and cookies, when using the CBC-mode cipher suite. Lucky Thirteen can be mitigated by implementing software patches or preferring the cipher suite RC4.
That being said, RC4 was also attacked, where through 16 million sessions a small amount of plaintext can be recovered.</description></item></channel></rss>